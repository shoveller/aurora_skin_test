{"version":3,"file":"src_pages_MyPage_ShippingAddress_index_js.cbb14946ebf1acd8ff58.bundle.js","mappings":";;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;;ACAA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAIA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3BA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAwBA;AAtBA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AAGA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AAAA;AAEA;AAEA;AAEA;AAAA;AAAA;AACA;AAEA;AAAA;AAEA;AAAA;AAAA;AAEA;AAEA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAEA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AA;AAAA;AAAA;AAAA;AAMA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AA1DA;AAAA;AAAA;AA4DA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAEA;AAAA;AACA;AAEA;AAAA;AAEA;AACA;AAAA;AACA;AAGA;AAAA;AAEA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAIA;AAIA;AAEA;;;;;;;;;;;;;;;ACrLA;AAEA;;;;;;;;;;;;;;;;;ACFA;AAEA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAGA;AAGA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;AClBA;AAEA","sources":["webpack://@shopby/react-skin/./node_modules/@shopby/react-components/dist/esm/common/Skeleton/Skeleton.js","webpack://@shopby/react-skin/./node_modules/@shopby/react-components/dist/esm/common/Skeleton/SkeletonGallery.js","webpack://@shopby/react-skin/./node_modules/@shopby/react-components/dist/esm/common/Skeleton/SkeletonList.js","webpack://@shopby/react-skin/./node_modules/@shopby/react-components/dist/esm/common/Skeleton/SkeletonSquare.js","webpack://@shopby/react-skin/./node_modules/@shopby/react-components/dist/esm/common/VisibleComponent/VisibleComponent.js","webpack://@shopby/react-skin/./node_modules/@shopby/react-components/dist/esm/order/MyShippingAddressProvider/MyShippingAddressProvider.js","webpack://@shopby/react-skin/./src/components/ListSkeleton/ListSkeleton.jsx","webpack://@shopby/react-skin/./src/components/ShippingAddressForm/ShippingAddressForm.jsx","webpack://@shopby/react-skin/./src/components/ShippingAddressForm/index.js","webpack://@shopby/react-skin/./src/pages/MyPage/ShippingAddress/ShippingAddress.jsx","webpack://@shopby/react-skin/./src/pages/MyPage/ShippingAddress/ShippingAddressCount.jsx","webpack://@shopby/react-skin/./src/pages/MyPage/ShippingAddress/ShippingAddressItem.jsx","webpack://@shopby/react-skin/./src/pages/MyPage/ShippingAddress/ShippingAddressList.jsx","webpack://@shopby/react-skin/./src/pages/MyPage/ShippingAddress/index.js","webpack://@shopby/react-skin/./src/pages/MyPage/TotalCount/TotalCount.jsx","webpack://@shopby/react-skin/./src/pages/MyPage/TotalCount/index.js"],"sourcesContent":["import{jsx as _jsx,Fragment as _Fragment}from\"react/jsx-runtime\";import SkeletonGallery from\"./SkeletonGallery\";import SkeletonList from\"./SkeletonList\";import SkeletonSquare from\"./SkeletonSquare\";var Skeleton=function(e){var t,r,n={SQUARE:function(){return _jsx(SkeletonSquare,{})},GALLERY:function(){return _jsx(SkeletonGallery,{})},LIST:function(){return _jsx(SkeletonList,{})}};return null!==(r=null===(t=n[e.type])||void 0===t?void 0:t.call(n))&&void 0!==r?r:_jsx(_Fragment,{})};export default Skeleton;","var __assign=this&&this.__assign||function(){return __assign=Object.assign||function(s){for(var e,a=1,n=arguments.length;a<n;a++)for(var t in e=arguments[a])Object.prototype.hasOwnProperty.call(e,t)&&(s[t]=e[t]);return s},__assign.apply(this,arguments)};import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";var SkeletonGallery=function(){return _jsxs(\"div\",__assign({className:\"skeleton skeleton--gallery\"},{children:[_jsx(\"div\",{className:\"skeleton__media\"}),_jsx(\"div\",{className:\"skeleton__line\"}),_jsx(\"div\",{className:\"skeleton__line\"})]}))};export default SkeletonGallery;","var __assign=this&&this.__assign||function(){return __assign=Object.assign||function(s){for(var e,t=1,n=arguments.length;t<n;t++)for(var i in e=arguments[t])Object.prototype.hasOwnProperty.call(e,i)&&(s[i]=e[i]);return s},__assign.apply(this,arguments)};import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";var SkeletonList=function(){return _jsxs(\"div\",__assign({className:\"skeleton skeleton--list\"},{children:[_jsx(\"div\",{className:\"skeleton__media\"}),_jsxs(\"div\",{children:[_jsx(\"div\",{className:\"skeleton__line skeleton__line--tit\"}),_jsx(\"div\",{className:\"skeleton__line\"})]})]}))};export default SkeletonList;","var __assign=this&&this.__assign||function(){return __assign=Object.assign||function(s){for(var e,n=1,t=arguments.length;n<t;n++)for(var a in e=arguments[n])Object.prototype.hasOwnProperty.call(e,a)&&(s[a]=e[a]);return s},__assign.apply(this,arguments)};import{jsx as _jsx}from\"react/jsx-runtime\";var SkeletonSquare=function(){return _jsx(\"div\",__assign({className:\"skeleton\"},{children:_jsx(\"div\",{className:\"skeleton__media\"})}))};export default SkeletonSquare;","import{Fragment as _Fragment,jsx as _jsx}from\"react/jsx-runtime\";var VisibleComponent=function(n){var t=n.shows,o=n.TruthyComponent,e=n.FalsyComponent,r=void 0===e?_jsx(_Fragment,{}):e;return\"function\"==typeof t&&t()||t?o:r};export default VisibleComponent;","var __assign=this&&this.__assign||function(){return __assign=Object.assign||function(e){for(var t,r=1,n=arguments.length;r<n;r++)for(var s in t=arguments[r])Object.prototype.hasOwnProperty.call(t,s)&&(e[s]=t[s]);return e},__assign.apply(this,arguments)},__awaiter=this&&this.__awaiter||function(e,t,r,n){return new(r||(r=Promise))((function(s,o){function i(e){try{u(n.next(e))}catch(e){o(e)}}function a(e){try{u(n.throw(e))}catch(e){o(e)}}function u(e){var t;e.done?s(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(i,a)}u((n=n.apply(e,t||[])).next())}))},__generator=this&&this.__generator||function(e,t){var r,n,s,o,i={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return o={next:a(0),throw:a(1),return:a(2)},\"function\"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function a(a){return function(u){return function(a){if(r)throw new TypeError(\"Generator is already executing.\");for(;o&&(o=0,a[0]&&(i=0)),i;)try{if(r=1,n&&(s=2&a[0]?n.return:a[0]?n.throw||((s=n.return)&&s.call(n),0):n.next)&&!(s=s.call(n,a[1])).done)return s;switch(n=0,s&&(a=[2&a[0],s.value]),a[0]){case 0:case 1:s=a;break;case 4:return i.label++,{value:a[1],done:!1};case 5:i.label++,n=a[1],a=[0];continue;case 7:a=i.ops.pop(),i.trys.pop();continue;default:if(!(s=i.trys,(s=s.length>0&&s[s.length-1])||6!==a[0]&&2!==a[0])){i=0;continue}if(3===a[0]&&(!s||a[1]>s[0]&&a[1]<s[3])){i.label=a[1];break}if(6===a[0]&&i.label<s[1]){i.label=s[1],s=a;break}if(s&&i.label<s[2]){i.label=s[2],i.ops.push(a);break}s[2]&&i.ops.pop(),i.trys.pop();continue}a=t.call(e,i)}catch(e){a=[6,e],n=0}finally{r=s=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,u])}}},__read=this&&this.__read||function(e,t){var r=\"function\"==typeof Symbol&&e[Symbol.iterator];if(!r)return e;var n,s,o=r.call(e),i=[];try{for(;(void 0===t||t-- >0)&&!(n=o.next()).done;)i.push(n.value)}catch(e){s={error:e}}finally{try{n&&!n.done&&(r=o.return)&&r.call(o)}finally{if(s)throw s.error}}return i};import{jsx as _jsx}from\"react/jsx-runtime\";import{createContext,useContext,useMemo,useState}from\"react\";import{executeHelper,orderHelper}from\"@shopby/shared\";var MyShippingAddressActionContext=createContext(null),MyShippingAddressStateContext=createContext(null),_a=orderHelper.myShippingAddress,Helper=_a.Helper,QUERY_KEY=_a.QUERY_KEY,MUTATION_KEY=_a.MUTATION_KEY;export var DEFAULT_MY_SHIPPING_ADDRESS_PROVIDER_STATE={bookedAddresses:[],defaultAddress:null,recentAddresses:[],recentAddress:null};var MyShippingAddressProvider=function(e){var t=e.children,r=__read(useState(DEFAULT_MY_SHIPPING_ADDRESS_PROVIDER_STATE.defaultAddress),2),n=r[0],s=r[1],o=__read(useState(DEFAULT_MY_SHIPPING_ADDRESS_PROVIDER_STATE.recentAddresses),2),i=o[0],a=o[1],u=__read(useState(DEFAULT_MY_SHIPPING_ADDRESS_PROVIDER_STATE.bookedAddresses),2),_=u[0],d=u[1],c=__read(useState(DEFAULT_MY_SHIPPING_ADDRESS_PROVIDER_STATE.recentAddress),2),S=c[0],l=c[1],p=useMemo((function(){return executeHelper(new Helper)}),[]),E=p.executeQuery,A=p.executeMutation,f=A(MUTATION_KEY.SAVE_SHIPPING_ADDRESS).mutate,h=A(MUTATION_KEY.MODIFY_MY_SHIPPING_ADDRESS).mutate,y=A(MUTATION_KEY.DELETE_MY_SHIPPING_ADDRESS).mutate,D=useMemo((function(){return{fetchMyShippingAddress:function(){return __awaiter(this,void 0,void 0,(function(){return __generator(this,(function(e){switch(e.label){case 0:return[4,E(QUERY_KEY.QUERY_MY_SHIPPING_ADDRESSES,{onSuccess:function(){E(QUERY_KEY.QUERY_MY_BOOKED_ADDRESSES,{onSuccess:function(e){var t=e.data;d(t)}}),E(QUERY_KEY.QUERY_MY_DEFAULT_ADDRESS,{onSuccess:function(e){var t=e.data;s(t)}}),E(QUERY_KEY.QUERY_MY_RECENT_ADDRESSES,{onSuccess:function(e){var t=e.data;a(t)}}),E(QUERY_KEY.QUERY_MY_RECENT_ADDRESS,{onSuccess:function(e){var t=e.data;l(t)}})}})];case 1:return e.sent(),[2]}}))}))},getShippingAddressByAddressNo:function(e){return E(QUERY_KEY.QUERY_SHIPPING_ADDRESS_BY_ADDRESS_NO,{payload:e}).data},saveMyShippingAddress:function(e){return f({payload:e})},modifyMyShippingAddress:function(e){return h({payload:e})},deleteMyShippingAddress:function(e){return y({payload:e})}}}),[]);return _jsx(MyShippingAddressActionContext.Provider,__assign({value:D},{children:_jsx(MyShippingAddressStateContext.Provider,__assign({value:{defaultAddress:n,recentAddresses:i,bookedAddresses:_,recentAddress:S}},{children:t}))}))};export var useMyShippingAddressActionContext=function(){var e=useContext(MyShippingAddressActionContext);if(!e)throw new Error(\"INVALID_MyShippingAddressActionContext\");return e};export var useMyShippingAddressStateContext=function(){var e=useContext(MyShippingAddressStateContext);if(!e)throw new Error(\"INVALID_MyShippingAddressStateContext\");return e};export default MyShippingAddressProvider;","import { number, node, oneOf, element, string, bool } from 'prop-types';\n\nimport { Skeleton } from '@shopby/react-components';\n\nconst ListSkeleton = ({ size = 4, children, className, isLoading }) => {\n  if (isLoading) {\n    return (\n      <div className={className}>\n        {Array(size)\n          .fill(null)\n          .map((_, idx) => (\n            <Skeleton key={idx} type=\"LIST\" />\n          ))}\n      </div>\n    );\n  }\n\n  return children;\n};\n\nexport default ListSkeleton;\n\nListSkeleton.propTypes = {\n  className: string,\n  size: number,\n  children: oneOf([node, element]),\n  isLoading: bool,\n};\n","import { useState } from 'react';\n\nimport { string, shape, bool, object } from 'prop-types';\n\nimport { Checkbox, PhoneNumberInput, TextField } from '@shopby/react-components';\nimport { ParameterTypeError } from '@shopby/shared';\n\nimport { PHONE_CARRIER_NUMBERS_BY_STRING } from '../../constants/form';\nimport AddressForm from '../AddressForm';\n\nconst DEFAULT_CONTACT = {\n  carrierNumber: '',\n  firstSerial: '',\n  secondSerial: '',\n};\n\nconst ShippingAddressForm = ({\n  refs: {\n    addressNameRef,\n    receiverNameRef,\n    addressFormRef,\n    mobilePhoneNumberInputRef,\n    phoneNumberInputRef,\n    willBeSavedAsDefaultAddressRef,\n  },\n  className = '',\n  addressName: initialAddressName = '',\n  receiverName: initialReceiverName = '',\n  zipCode: initialZipCode = '',\n  roadAddress: initialRoadAddress = '',\n  jibunAddress: initialJibunAddress = '',\n  addressDetail: initialAddressDetail = '',\n  willBeSavedAsDefaultAddress: initialWillBeSavedAsDefaultAddress = false,\n  mobileNumber: initialMobileNumber = {\n    ...DEFAULT_CONTACT,\n  },\n  phoneNumber: initialPhoneNumber = {\n    ...DEFAULT_CONTACT,\n  },\n  children,\n}) => {\n  const [addressName, setAddressName] = useState(initialAddressName);\n  const [receiverName, setReceiverName] = useState(initialReceiverName);\n  const [zipCode, setZipCode] = useState(initialZipCode);\n  const [roadAddress, setRoadAddress] = useState(initialRoadAddress);\n  const [jibunAddress, setJibunAddress] = useState(initialJibunAddress);\n  const [addressDetail, setAddressDetail] = useState(initialAddressDetail);\n  const [willBeSavedAsDefaultAddress, setWillBeSavedAsDefaultAddress] = useState(initialWillBeSavedAsDefaultAddress);\n  const [mobileNumber, setMobileNumber] = useState(initialMobileNumber);\n  const [phoneNumber, setPhoneNumber] = useState(initialPhoneNumber);\n\n  const handleAddressNameChange = ({ currentTarget: { value } }) => {\n    setAddressName(value);\n  };\n\n  const handleReceiverNameChange = ({ currentTarget: { value } }) => {\n    setReceiverName(value);\n  };\n\n  const handleAddressDetailChange = ({ addressDetail }) => {\n    setAddressDetail(addressDetail);\n  };\n\n  const handleAddressItemClick = ({ zipCode, roadAddress, jibunAddress }) => {\n    setZipCode(zipCode);\n    setRoadAddress(roadAddress);\n    setJibunAddress(jibunAddress);\n  };\n\n  const handlePhoneSerialNumberChange = ({ currentTarget: { value } }, type, isMobile = false) => {\n    if (!['FIRST', 'SECOND'].includes(type)) {\n      ParameterTypeError.of({ parameterName: 'type', functionName: handlePhoneSerialNumberChange.name });\n    }\n\n    const typeByLowerCase = type.toLowerCase();\n    const setFunction = isMobile ? setMobileNumber : setPhoneNumber;\n\n    setFunction((prev) => ({\n      ...prev,\n      [`${typeByLowerCase}Serial`]: value,\n    }));\n  };\n\n  const handleCarrierNumberSelect = ({ currentTarget: { value } }, isMobile = false) => {\n    const setFunction = isMobile ? setMobileNumber : setPhoneNumber;\n\n    setFunction((prev) => ({\n      ...prev,\n      carrierNumber: value,\n    }));\n  };\n\n  const handleSaveAsDefaultBtnClick = ({ currentTarget: { checked } }) => {\n    setWillBeSavedAsDefaultAddress(checked);\n  };\n\n  return (\n    <div className={`shipping-address-form ${className}`}>\n      <div className=\"shipping-address-form__item\">\n        <label className=\"shipping-address-form__item--label\">배송지명</label>\n        <TextField ref={addressNameRef} value={addressName} onChange={handleAddressNameChange} />\n      </div>\n      <div className=\"shipping-address-form__item\">\n        <label className=\"shipping-address-form__item--label\">받는 사람</label>\n        <TextField ref={receiverNameRef} value={receiverName} onChange={handleReceiverNameChange} />\n      </div>\n      <div className=\"shipping-address-form__item\">\n        <label className=\"shipping-address-form__item--label\">주소</label>\n        <AddressForm\n          ref={addressFormRef}\n          jibunAddress={jibunAddress}\n          zipCode={zipCode}\n          address={roadAddress}\n          addressDetail={addressDetail}\n          onAddressDetailChange={handleAddressDetailChange}\n          onAddressItemClick={handleAddressItemClick}\n        />\n      </div>\n      <div className=\"shipping-address-form__item\">\n        <label className=\"shipping-address-form__item--label\">휴대폰 번호</label>\n        <PhoneNumberInput\n          ref={mobilePhoneNumberInputRef}\n          carrierNumber={mobileNumber.carrierNumber}\n          firstSerial={mobileNumber.firstSerial}\n          secondSerial={mobileNumber.secondSerial}\n          onFirstSerialChange={(e) => handlePhoneSerialNumberChange(e, 'FIRST', true)}\n          onSecondSerialChange={(e) => handlePhoneSerialNumberChange(e, 'SECOND', true)}\n          onCarrierNumberSelect={(e) => handleCarrierNumberSelect(e, true)}\n        />\n      </div>\n      <div className=\"shipping-address-form__item\">\n        <label className=\"shipping-address-form__item--label\">전화번호</label>\n        <PhoneNumberInput\n          ref={phoneNumberInputRef}\n          carrierNumbersByString={PHONE_CARRIER_NUMBERS_BY_STRING}\n          carrierNumber={phoneNumber.carrierNumber}\n          firstSerial={phoneNumber.firstSerial}\n          secondSerial={phoneNumber.secondSerial}\n          onFirstSerialChange={(e) => handlePhoneSerialNumberChange(e, 'FIRST')}\n          onSecondSerialChange={(e) => handlePhoneSerialNumberChange(e, 'SECOND')}\n          onCarrierNumberSelect={handleCarrierNumberSelect}\n        />\n      </div>\n      <div className=\"shipping-address-form__item\">\n        <Checkbox\n          ref={willBeSavedAsDefaultAddressRef}\n          label=\"기본 배송지로 저장\"\n          onChange={handleSaveAsDefaultBtnClick}\n          checked={willBeSavedAsDefaultAddress}\n        />\n      </div>\n      {children}\n    </div>\n  );\n};\n\nexport default ShippingAddressForm;\n\nShippingAddressForm.displayName = 'ShippingAddressForm';\n\nShippingAddressForm.propTypes = {\n  className: string,\n  addressName: string,\n  receiverName: string,\n  zipCode: string,\n  roadAddress: string,\n  jibunAddress: string,\n  addressDetail: string,\n  willBeSavedAsDefaultAddress: bool,\n  mobileNumber: shape({\n    carrierNumber: string,\n    firstSerial: string,\n    secondSerial: string,\n  }),\n  phoneNumber: shape({\n    carrierNumber: string,\n    firstSerial: string,\n    secondSerial: string,\n  }),\n  refs: shape({\n    addressNameRef: object,\n    receiverNameRef: object,\n    addressFormRef: object,\n    mobilePhoneNumberInputRef: object,\n    phoneNumberInputRef: object,\n    willBeSavedAsDefaultAddressRef: object,\n  }),\n  children: object,\n};\n","import ShippingAddressForm from './ShippingAddressForm';\n\nexport default ShippingAddressForm;\n","import { MyShippingAddressProvider } from '@shopby/react-components';\n\nimport useLayoutChanger from '../../../hooks/useLayoutChanger';\n\nimport ShippingAddressCount from './ShippingAddressCount';\nimport ShippingAddressList from './ShippingAddressList';\n\nconst ShippingAddress = () => {\n  useLayoutChanger({\n    title: '배송지 관리',\n    hasBackBtnOnHeader: true,\n    hasCartBtnOnHeader: true,\n    hasBottomNav: true,\n  });\n\n  return (\n    <MyShippingAddressProvider>\n      <div className=\"profile-shipping-address\">\n        <ShippingAddressCount />\n        <ShippingAddressList />\n      </div>\n    </MyShippingAddressProvider>\n  );\n};\n\nexport default ShippingAddress;\n","import { number } from 'prop-types';\n\nimport { useMyShippingAddressStateContext } from '@shopby/react-components';\n\nimport TotalCount from '../TotalCount';\n\nconst ShippingAddressCount = () => {\n  const { bookedAddresses } = useMyShippingAddressStateContext();\n\n  return <TotalCount title=\"배송지\" count={bookedAddresses.length} />;\n};\n\nShippingAddressCount.propTypes = {\n  totalCount: number,\n};\n\nexport default ShippingAddressCount;\n","import { useState, useMemo } from 'react';\n\nimport { string, number, shape, object, oneOf, func } from 'prop-types';\n\nimport {\n  Button,\n  VisibleComponent,\n  useModalActionContext,\n  useMyShippingAddressActionContext,\n} from '@shopby/react-components';\n\nimport { useErrorBoundaryActionContext } from '../../../components/ErrorBoundary';\nimport FullModal from '../../../components/FullModal';\nimport ShippingAddressForm from '../../../components/ShippingAddressForm';\n\nconst ShippingAddressItem = ({\n  refs,\n  addressNo,\n  addressName,\n  receiverName,\n  receiverZipCd,\n  receiverAddress,\n  receiverDetailAddress,\n  receiverJibunAddress,\n  receiverContact1,\n  receiverContact2,\n  defaultYn,\n  getCheckMessageToSubmitForm,\n  ...restDetail\n}) => {\n  const { fetchMyShippingAddress, modifyMyShippingAddress, deleteMyShippingAddress } =\n    useMyShippingAddressActionContext();\n  const { openConfirm, openAlert } = useModalActionContext();\n  const { catchError } = useErrorBoundaryActionContext();\n\n  const [isOpen, setIsOpen] = useState(false);\n  const [mobileCarrierNumber = '', mobileFirstSerial = '', mobileSecondSerial = ''] = useMemo(\n    () => receiverContact1.split('-'),\n    [receiverContact1]\n  );\n  const [phoneCarrierNumber = '', phoneFirstSerial = '', phoneSecondSerial = ''] = useMemo(\n    () => receiverContact2.split('-'),\n    [receiverContact2]\n  );\n\n  const closeModal = () => {\n    setIsOpen(false);\n  };\n\n  const handleShippingAddressFormModify = async () => {\n    const {\n      addressNameRef: {\n        current: { value: addressName },\n      },\n      receiverNameRef: {\n        current: { value: receiverName },\n      },\n      addressFormRef: {\n        current: {\n          addressForm: { zipCode, jibunAddress, address, addressDetail },\n        },\n      },\n      mobilePhoneNumberInputRef: { current: mobilePhoneNumberInput },\n      phoneNumberInputRef: { current: phoneNumberInput },\n      willBeSavedAsDefaultAddressRef: {\n        current: { checked: willBeSavedAsDefaultAddress },\n      },\n    } = refs;\n\n    const form = {\n      ...restDetail,\n      addressNo,\n      addressName,\n      willBeSavedAsDefaultAddress,\n      receiverName,\n      receiverZipCd: zipCode,\n      receiverJibunAddress: jibunAddress,\n      receiverAddress: address,\n      receiverDetailAddress: addressDetail,\n      receiverContact1: mobilePhoneNumberInput.getValue(),\n      receiverContact2: phoneNumberInput.getValue(),\n    };\n\n    const message = getCheckMessageToSubmitForm(form);\n\n    if (message) {\n      openAlert({\n        message,\n      });\n\n      return;\n    }\n\n    try {\n      await modifyMyShippingAddress(form);\n\n      openAlert({\n        message: '배송지 정보가 수정되었습니다.',\n        onClose: async () => {\n          await fetchMyShippingAddress();\n\n          closeModal();\n        },\n      });\n    } catch (e) {\n      catchError(e);\n    }\n  };\n\n  const handleShippingAddressDelete = () => {\n    openConfirm({\n      message: '배송지를 삭제하시겠습니까?',\n      confirmLabel: '확인',\n      onConfirm: async () => {\n        try {\n          await deleteMyShippingAddress({\n            addressNo,\n          });\n\n          await fetchMyShippingAddress();\n        } catch (e) {\n          catchError(e);\n        }\n      },\n    });\n  };\n\n  return (\n    <>\n      <li key={addressNo} className=\"profile-shipping-address__list-item\">\n        <p className=\"profile-shipping-address__name\">{addressName}</p>\n        <p className=\"profile-shipping-address__receiver\">{receiverName}</p>\n        <p className=\"profile-shipping-address__zip-code\">{receiverZipCd}</p>\n        <p className=\"profile-shipping-address__base-address\">{receiverAddress}</p>\n        <p className=\"profile-shipping-address__detail-address\">{receiverDetailAddress}</p>\n        <p className=\"profile-shipping-address__mobile\">{receiverContact1 ?? receiverContact2}</p>\n        <VisibleComponent\n          shows={defaultYn === 'Y'}\n          TruthyComponent={<p className=\"profile-shipping-address__default-address\">기본 배송지</p>}\n        />\n        <div className=\"profile-shipping-address__buttons--sm\">\n          <Button label=\"수정\" onClick={() => setIsOpen(true)} />\n          <Button label=\"삭제\" onClick={() => handleShippingAddressDelete()} />\n        </div>\n      </li>\n      <VisibleComponent\n        shows={isOpen}\n        TruthyComponent={\n          <FullModal title=\"배송지 수정\" onClose={() => setIsOpen(false)}>\n            <ShippingAddressForm\n              refs={refs}\n              onClose={() => setIsOpen(false)}\n              className=\"profile-shipping-address__form\"\n              addressName={addressName}\n              receiverName={receiverName}\n              zipCode={receiverZipCd}\n              roadAddress={receiverAddress}\n              jibunAddress={receiverJibunAddress}\n              addressDetail={receiverDetailAddress}\n              willBeSavedAsDefaultAddress={defaultYn === 'Y'}\n              mobileNumber={{\n                carrierNumber: mobileCarrierNumber,\n                firstSerial: mobileFirstSerial,\n                secondSerial: mobileSecondSerial,\n              }}\n              phoneNumber={{\n                carrierNumber: phoneCarrierNumber,\n                firstSerial: phoneFirstSerial,\n                secondSerial: phoneSecondSerial,\n              }}\n            >\n              <div className=\"shipping-address-form__buttons\">\n                <Button theme=\"dark\" label=\"취소\" onClick={closeModal} />\n                <Button theme=\"caution\" label=\"수정\" onClick={handleShippingAddressFormModify} />\n              </div>\n            </ShippingAddressForm>\n          </FullModal>\n        }\n      />\n    </>\n  );\n};\n\nexport default ShippingAddressItem;\n\nShippingAddressItem.propTypes = {\n  addressNo: number,\n  addressName: string,\n  receiverName: string,\n  receiverZipCd: string,\n  receiverAddress: string,\n  receiverJibunAddress: string,\n  receiverDetailAddress: string,\n  receiverContact1: string,\n  receiverContact2: string,\n  defaultYn: oneOf(['Y', 'N']),\n  refs: shape({\n    addressNameRef: object,\n    receiverNameRef: object,\n    addressFormRef: object,\n    mobilePhoneNumberInputRef: object,\n    phoneNumberInputRef: object,\n  }),\n  getCheckMessageToSubmitForm: func,\n};\n","import { useEffect, useState, useRef } from 'react';\n\nimport {\n  Button,\n  VisibleComponent,\n  useModalActionContext,\n  useMyShippingAddressActionContext,\n  useMyShippingAddressStateContext,\n} from '@shopby/react-components';\n\nimport { useErrorBoundaryActionContext } from '../../../components/ErrorBoundary';\nimport FullModal from '../../../components/FullModal';\nimport ListSkeleton from '../../../components/ListSkeleton/ListSkeleton';\nimport ShippingAddressForm from '../../../components/ShippingAddressForm';\n\nimport ShippingAddressItem from './ShippingAddressItem';\n\n// eslint-disable-next-line complexity\nconst getCheckMessageToSubmitForm = (reviewForm) => {\n  if (!reviewForm.receiverName) {\n    return '받는사람을 입력해주세요.';\n  }\n\n  if (!reviewForm.receiverZipCd || !reviewForm.receiverAddress || !reviewForm.receiverDetailAddress) {\n    return '주소를 입력해주세요.';\n  }\n\n  const mobileNumber = reviewForm.receiverContact1?.replaceAll('-', '');\n\n  if (mobileNumber.length === 0) {\n    return '휴대폰번호를 입력해주세요.';\n  }\n\n  if (mobileNumber.length < 11) {\n    return '정확한 휴대폰번호를 입력해주세요.';\n  }\n\n  return '';\n};\n\nconst EmptyShippingAddressList = () => (\n  <div className=\"empty-list\">\n    <p>배송지를 등록해주세요.</p>\n  </div>\n);\n\nconst ShippingAddressList = () => {\n  const { fetchMyShippingAddress, saveMyShippingAddress } = useMyShippingAddressActionContext();\n  const { bookedAddresses } = useMyShippingAddressStateContext();\n  const { openAlert } = useModalActionContext();\n  const { catchError } = useErrorBoundaryActionContext();\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const refs = {\n    addressNameRef: useRef(),\n    receiverNameRef: useRef(),\n    addressFormRef: useRef(),\n    mobilePhoneNumberInputRef: useRef(),\n    phoneNumberInputRef: useRef(),\n    willBeSavedAsDefaultAddressRef: useRef(),\n  };\n\n  const closeModal = () => {\n    setIsOpen(false);\n  };\n\n  const handleShippingAddressFormSubmit = async () => {\n    const {\n      addressNameRef: {\n        current: { value: addressName },\n      },\n      receiverNameRef: {\n        current: { value: receiverName },\n      },\n      addressFormRef: {\n        current: {\n          addressForm: { zipCode, jibunAddress, address, addressDetail },\n        },\n      },\n      mobilePhoneNumberInputRef: { current: mobilePhoneNumberInput },\n      phoneNumberInputRef: { current: phoneNumberInput },\n      willBeSavedAsDefaultAddressRef: {\n        current: { checked: willBeSavedAsDefaultAddress },\n      },\n    } = refs;\n\n    const form = {\n      addressType: 'BOOK',\n      customsIdNumber: '',\n      addressName,\n      willBeSavedAsDefaultAddress,\n      receiverName,\n      receiverZipCd: zipCode,\n      receiverJibunAddress: jibunAddress,\n      receiverAddress: address,\n      receiverDetailAddress: addressDetail,\n      receiverContact1: mobilePhoneNumberInput.getValue(),\n      receiverContact2: phoneNumberInput.getValue(),\n    };\n\n    const message = getCheckMessageToSubmitForm(form);\n\n    if (message) {\n      openAlert({\n        message,\n      });\n\n      return;\n    }\n\n    try {\n      await saveMyShippingAddress(form);\n\n      openAlert({\n        message: '배송지 정보가 추가되었습니다.',\n        onClose: async () => {\n          await fetchMyShippingAddress();\n\n          closeModal(false);\n        },\n      });\n    } catch (e) {\n      catchError(e);\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      setIsLoading(true);\n\n      await fetchMyShippingAddress();\n\n      setIsLoading(false);\n    })();\n  }, []);\n\n  return (\n    <>\n      <Button\n        className=\"profile-shipping-address__registration-button\"\n        label=\"배송지 등록하기\"\n        onClick={() => setIsOpen(true)}\n      />\n      <VisibleComponent\n        shows={!isLoading && !bookedAddresses.length}\n        TruthyComponent={<EmptyShippingAddressList />}\n        FalsyComponent={\n          <>\n            <ul className=\"profile-shipping-address__list\">\n              {bookedAddresses.map((bookedAddress) => (\n                <ShippingAddressItem\n                  key={bookedAddress.addressNo}\n                  {...bookedAddress}\n                  refs={refs}\n                  getCheckMessageToSubmitForm={getCheckMessageToSubmitForm}\n                />\n              ))}\n            </ul>\n            <ListSkeleton isLoading={isLoading} />\n          </>\n        }\n      />\n      <VisibleComponent\n        shows={isOpen}\n        TruthyComponent={\n          <FullModal id=\"profile-shipping-address__form\" title=\"배송지 등록\" onClose={() => setIsOpen(false)}>\n            <ShippingAddressForm refs={refs} className=\"profile-shipping-address__form\">\n              <div className=\"shipping-address-form__buttons\">\n                <Button theme=\"dark\" label=\"취소\" onClick={closeModal} />\n                <Button theme=\"caution\" label=\"등록\" onClick={handleShippingAddressFormSubmit} />\n              </div>\n            </ShippingAddressForm>\n          </FullModal>\n        }\n      />\n    </>\n  );\n};\n\nexport default ShippingAddressList;\n","import ShippingAddress from './ShippingAddress';\n\nexport default ShippingAddress;\n","import { string, number } from 'prop-types';\n\nimport { convertToKoreanCurrency } from '@shopby/shared';\n\nconst TotalCount = ({ title, count }) => (\n  <p className=\"my-page__total-count\">\n    {title}\n    <span className=\"my-page__count\">\n      <span>{convertToKoreanCurrency(count)}</span> 건\n    </span>\n  </p>\n);\n\nTotalCount.propTypes = {\n  title: string,\n  count: number,\n};\n\nexport default TotalCount;\n","import TotalCount from './TotalCount';\n\nexport default TotalCount;\n"],"names":[],"sourceRoot":""}