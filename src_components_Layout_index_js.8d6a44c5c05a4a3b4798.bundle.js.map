{"version":3,"file":"src_components_Layout_index_js.8d6a44c5c05a4a3b4798.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AAEA;AAEA;AAAA;AAAA;AACA;AAAA;AAEA;AAEA;AAEA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AACA;AAAA;AAEA;AAEA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAIA;AAEA;AAEA;AACA;AACA;AAYA;;;;;;;;;;;;;;ACxDA;AAEA;;;;;;;;;;;;;;;;;;ACFA;AAEA;AAEA;AAEA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACnCA;AAEA;;;;;;;;;;;;;;;;;;ACFA;AAEA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAEA;AAGA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;AC1BA;AAEA;;;;;;;;;;;;;;;;;;ACFA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAIA;AAGA;;;;;;;;;;;;;;;;;ACdA;AAEA;AAEA;AACA;AACA;AAGA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAEA;AAIA;AAAA;AAIA;AACA;;;;;;;;;;;;;;;;;;AClCA;AAEA;AAEA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAGA;AAEA;AAAA;AAAA;AAKA;AAEA;;;;;;;;;;;;;;;;;;;;;;AC1BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AACA;AAEA;AAOA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAAA;AAIA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAIA;AAEA;;;;;;;;;;;;;;ACvDA;AAEA;;;;;;;;;;;;;;;;ACFA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACrBA;AAEA;;;;;;;;;;;;;;;;ACFA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLA;AACA;AAEA;AAMA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAIA;AAHA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAGA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAGA;AAEA;AAAA;AAAA;AAKA;AAAA;AAGA;AAAA;AAEA;AACA;AAIA;AAGA;AACA;AAOA;AAGA;AACA;AAIA;AAGA;AAAA;AAGA;AAAA;AAMA;AACA;AAOA;AAGA;AACA;AAMA;AAKA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAKA;AAEA;;;;;;;;;;;;;;AC/JA;AAEA;;;;;;;;;;;;;;;;;;;;;ACFA;AAEA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAEA;;;;;;;;;;;;;;ACZA;AA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CA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAIA;AAEA;;;;;;;;;;;;;;;;;;;;ACpCA;AAEA;AAEA;AAEA;AAAA;AAAA;AACA;AAAA;AAEA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAIA;AAKA;AAEA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACjCA;AAEA;AAEA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAGA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAGA;AAGA;AAEA;AACA;AACA;;;;;;;;;;;;;;ACjDA;AAEA;;;;;;;;;;;;;;;;;;;;;;ACFA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAEA;AAEA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAIA;AAAA;AAEA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACtCA;AAEA;;;;;;;;;;;;;ACFA;;;;;;;;;;;;;;;;;;;;;;ACAA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sources":["webpack://@shopby/react-skin/./src/components/AdminBanner/AdminBanner.jsx","webpack://@shopby/react-skin/./src/components/AdminBanner/index.js","webpack://@shopby/react-skin/./src/components/BackButton/BackButton.jsx","webpack://@shopby/react-skin/./src/components/BackButton/index.js","webpack://@shopby/react-skin/./src/components/BottomNav/BottomNav.jsx","webpack://@shopby/react-skin/./src/components/BottomNav/index.js","webpack://@shopby/react-skin/./src/components/CategoryNav/CategoryNav.jsx","webpack://@shopby/react-skin/./src/components/CategoryNav/CategoryNavLinks.jsx","webpack://@shopby/react-skin/./src/components/CategoryNav/Cs.jsx","webpack://@shopby/react-skin/./src/components/CategoryNav/SignInButton.jsx","webpack://@shopby/react-skin/./src/components/CategoryNav/index.js","webpack://@shopby/react-skin/./src/components/CustomBanner/CustomBanner.jsx","webpack://@shopby/react-skin/./src/components/CustomBanner/index.js","webpack://@shopby/react-skin/./src/components/DesignPopup/index.js","webpack://@shopby/react-skin/./src/components/Footer/Footer.jsx","webpack://@shopby/react-skin/./src/components/Footer/index.js","webpack://@shopby/react-skin/./src/components/FullModal/FullModal.jsx","webpack://@shopby/react-skin/./src/components/FullModal/index.js","webpack://@shopby/react-skin/./src/components/Header/Header.jsx","webpack://@shopby/react-skin/./src/components/Header/MallLogo.jsx","webpack://@shopby/react-skin/./src/components/Header/index.js","webpack://@shopby/react-skin/./src/components/Layout/Layout.jsx","webpack://@shopby/react-skin/./src/components/Layout/LayoutProvider.jsx","webpack://@shopby/react-skin/./src/components/Layout/index.js","webpack://@shopby/react-skin/./src/components/Meta/Meta.jsx","webpack://@shopby/react-skin/./src/components/Nav/Nav.jsx","webpack://@shopby/react-skin/./src/components/SearchKeyword/SearchKeyword.jsx","webpack://@shopby/react-skin/./src/components/SearchKeyword/index.js","webpack://@shopby/react-skin/./src/components/TitleModal/TitleModal.jsx","webpack://@shopby/react-skin/./src/components/TitleModal/index.js","webpack://@shopby/react-skin/./src/constants/board.js","webpack://@shopby/react-skin/./src/hooks/useSearchKeyword.js"],"sourcesContent":["import { string, oneOf } from 'prop-types';\n\nimport { useBannerStateContext } from '@shopby/react-components';\n\nimport CustomBanner from '../CustomBanner';\n\nconst AdminBanner = ({ className, bannerId }) => {\n  const { bannerMap } = useBannerStateContext();\n\n  if (!bannerMap) return <></>;\n\n  const banner = bannerMap.get(bannerId);\n\n  const { banners, imageSize, bannerGroupName } = banner ?? {};\n\n  if (!banners || !banners.length) return <></>;\n\n  const [bannerInfo] = banners;\n  const { bannerImages, visible } = bannerInfo;\n\n  if (!visible) return <></>;\n\n  return (\n    <>\n      {bannerImages?.map((image) => (\n        <CustomBanner\n          key={image.imageNo}\n          className={className}\n          href={image.landingUrl ?? ''}\n          target={image.openLocationType === 'NEW' ? '_blank' : '_self'}\n          src={image.imageUrl}\n          alt={image.description || bannerGroupName}\n          width={imageSize.width}\n          height={imageSize.height}\n        />\n      ))}\n    </>\n  );\n};\n\nexport default AdminBanner;\n\nAdminBanner.propTypes = {\n  className: string,\n  bannerId: oneOf([\n    'LOGO',\n    'BNSLIDE',\n    'BANNER01',\n    'BANNER02',\n    'BANNER03',\n    'BANNER04',\n    'BANNER05',\n    'BNBOTTOM',\n    'BNBGLEFT',\n    'BNDETAIL',\n  ]),\n};\n","import AdminBanner from './AdminBanner';\n\nexport default AdminBanner;\n","import { useNavigate } from \"react-router-dom\";\n\nimport { string, func } from \"prop-types\";\n\nimport { IconBtn } from \"@shopby/react-components\";\n\nconst BackButton = ({ label, className, onClick }) => {\n  const navigate = useNavigate();\n\n  const handleClick = () => {\n    if (!window.navigation.canGoBack) {\n      navigate(\"/\");\n\n      return;\n    }\n\n    onClick ? onClick() : navigate(-1);\n  };\n\n  return (\n    <IconBtn\n      label={label}\n      className={className}\n      iconType=\"arrow-left\"\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default BackButton;\n\nBackButton.propTypes = {\n  label: string,\n  className: string,\n  onClick: func,\n};\n","import BackButton from './BackButton';\n\nexport default BackButton;\n","import { Link } from 'react-router-dom';\n\nimport { string, func } from 'prop-types';\n\nimport { IconSVG } from '@shopby/react-components';\n\nconst BottomNav = ({ className = '', search }) => (\n  <nav className={`bottom-nav ${className}`}>\n    <Link to=\"/\" className=\"bottom-nav__link bottom-nav__home\">\n      <IconSVG size={55} name=\"home\" strokeWidth={4} />\n      <span className=\"bottom-nav__label\">홈</span>\n    </Link>\n    <button className=\"bottom-nav__link bottom-nav__link--search\" onClick={search}>\n      <span className=\"bottom-nav__label\">검색</span>\n    </button>\n    <Link to=\"my-page\" className=\"bottom-nav__link bottom-nav__link--north\">\n      <span className=\"bottom-nav__label\">마이페이지</span>\n    </Link>\n  </nav>\n);\n\nBottomNav.propTypes = {\n  className: string,\n  search: func,\n};\n\nexport default BottomNav;\n","import BottomNav from './BottomNav';\n\nexport default BottomNav;\n","import { OffCanvas } from '@shopby/react-components';\n\nimport CategoryNavLinks from './CategoryNavLinks';\nimport Cs from './Cs';\nimport SignInButton from './SignInButton';\n\nconst CategoryNav = () => (\n  <OffCanvas className=\"category-nav\">\n    <SignInButton />\n    <CategoryNavLinks />\n    <Cs />\n  </OffCanvas>\n);\n\nexport default CategoryNav;\n","import { Link } from 'react-router-dom';\n\nimport { IconSVG, useMallStateContext } from '@shopby/react-components';\n\nconst CategoryNavLinks = () => {\n  const {\n    categories: { multiLevelCategories },\n  } = useMallStateContext();\n\n  return (\n    <div className=\"category-nav-content\">\n      {multiLevelCategories.length > 0 ? (\n        <nav className=\"l-panel category-nav-links\">\n          <h2 className=\"a11y\">상품 카테고리</h2>\n          {multiLevelCategories.map((category) => (\n            <Link\n              key={category.categoryNo}\n              to={`/products?categoryNo=${category.categoryNo}`}\n              style={{ backgroundImage: `${category.icon}` }}\n              className=\"category-nav-links__item\"\n            >\n              {category.label}\n              <span className=\"category-nav-links__arrow\">\n                <IconSVG name=\"angle-r\" size={20} />\n              </span>\n            </Link>\n          ))}\n        </nav>\n      ) : (\n        <p className=\"no-data\">노출 중인 전시 카테고리가 없습니다.</p>\n      )}\n    </div>\n  );\n};\nexport default CategoryNavLinks;\n","import { Link } from 'react-router-dom';\n\nimport { useMallStateContext, VisibleComponent } from '@shopby/react-components';\n\nimport { NOTICE_BOARD_ID } from '../../constants/board';\n\nconst Cs = () => {\n  const { boardsCategories } = useMallStateContext();\n  const notice = boardsCategories.find(({ boardId }) => boardId === NOTICE_BOARD_ID);\n\n  return (\n    <div className=\"cs\">\n      <VisibleComponent\n        shows={notice?.used}\n        TruthyComponent={\n          <Link className=\"cs__link\" to=\"/notice\">\n            {notice?.boardName}\n          </Link>\n        }\n      />\n      <Link className=\"cs__link\" to=\"/customer-center\">\n        고객센터\n      </Link>\n    </div>\n  );\n};\n\nexport default Cs;\n","import { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport {\n  IconSVG,\n  useAuthActionContext,\n  useAuthStateContext,\n  useOffCanvasActionContext,\n  useOffCanvasStateContext,\n} from '@shopby/react-components';\nimport { isSignedIn } from '@shopby/shared';\n\nconst SignInButton = () => {\n  const { profile } = useAuthStateContext();\n  const { fetchProfile } = useAuthActionContext();\n  const { closeCanvas } = useOffCanvasActionContext();\n  const { visible } = useOffCanvasStateContext();\n  const [userName, setUserName] = useState();\n\n  useEffect(() => {\n    if (!isSignedIn()) return;\n\n    (async () => {\n      if (!profile) {\n        await fetchProfile();\n      }\n\n      setUserName(profile?.memberName ? profile.memberName : profile?.memberNo);\n    })();\n  }, [isSignedIn(), visible, profile]);\n\n  return (\n    <div className=\"category-nav-sign-in\">\n      <p>\n        {userName ? (\n          <>\n            <Link to=\"/my-page\">{userName}</Link> 님\n          </>\n        ) : (\n          <>\n            <Link className=\"category-nav-sign-in__link\" to=\"/sign-in\" state={{ from: '/' }}>\n              로그인\n            </Link>\n            을 해주세요.\n          </>\n        )}\n      </p>\n      <button className=\"category-nav-sign-in__close\" onClick={closeCanvas}>\n        <IconSVG name=\"x\" stroke=\"#fff\" size={30} />\n        <span className=\"a11y\">메뉴 닫기</span>\n      </button>\n    </div>\n  );\n};\n\nexport default SignInButton;\n","import CategoryNav from './CategoryNav';\n\nexport default CategoryNav;\n","import { oneOf, string } from 'prop-types';\n\nconst CustomBanner = ({ className, href, target, src, alt, width, height }) =>\n  href ? (\n    <a className={className} href={href} rel=\"noreferrer\" target={target}>\n      <img src={src} alt={alt} loading=\"lazy\" width={width} height={height} />\n    </a>\n  ) : (\n    <img className={className} src={src} alt={alt} loading=\"lazy\" width={width} height={height} />\n  );\n\nexport default CustomBanner;\n\nCustomBanner.propTypes = {\n  className: string,\n  href: string,\n  target: oneOf(['_blank', '_self']),\n  src: string,\n  alt: string,\n  width: string,\n  height: string,\n};\n","import CustomBanner from './CustomBanner';\n\nexport default CustomBanner;\n","export { default as DesignPopupNormal } from './DesignPopupNormal';\n// export { default as DesignPopupMultiMain } from './DesignPopupMultiMultiMain';\n// export { default as DesignPopupMultiSubject } from './DesignPopupMultiMultiSubject';\nimport DesignPopup from './DesignPopup';\n\nexport default DesignPopup;\n\nexport { default as DesignWindowPopup } from './DesignWindowPopup';\n","import { useState, useMemo } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport {\n  useTermsStateContext,\n  useMallStateContext,\n  VisibleComponent,\n} from \"@shopby/react-components\";\n\nimport FullModal from \"../FullModal\";\nimport Sanitized from \"../Sanitized\";\n\nconst FOOTER_TERMS_LABEL_MAP = {\n  MALL_INTRODUCTION: \"회사소개\",\n  USE: \"이용약관\",\n  PI_PROCESS: \"개인정보처리방침\",\n  ACCESS_GUIDE: \"이용안내\",\n};\n\nconst Footer = () => {\n  const { terms } = useTermsStateContext();\n  const {\n    termsConfig,\n    serviceBasicInfo,\n    since,\n    businessRegistrationNumberInformation,\n    ...restMall\n  } = useMallStateContext();\n\n  const [modalType, setModalType] = useState(null);\n\n  const services = useMemo(\n    () =>\n      Object.entries(FOOTER_TERMS_LABEL_MAP)\n        .map(([key, label]) => {\n          const {\n            used = false,\n            contents = \"\",\n            enforcementDate = \"\",\n          } = terms[key];\n          return {\n            key,\n            label,\n            used,\n            content: contents,\n            enforcementDate,\n          };\n        })\n        .filter(({ used }) => used) ?? [],\n    [terms]\n  );\n\n  return (\n    <footer className=\"footer\">\n      <div className=\"footer__info\">\n        {/* nav */}\n        <nav className=\"footer__nav\">\n          {services.map(({ key, label, content }) => (\n            <div key={key}>\n              <button\n                className={`footer__link footer__link--${\n                  key === \"PI_PROCESS\" ? \"bold\" : \"\"\n                }`}\n                onClick={() => setModalType(key)}\n              >\n                {label}\n              </button>\n              {modalType === key && (\n                <FullModal\n                  className=\"agreement\"\n                  title={label}\n                  onClose={() => setModalType(null)}\n                >\n                  <Sanitized html={content} />\n                </FullModal>\n              )}\n            </div>\n          ))}\n          <Link className=\"footer__link\" to=\"/customer-center\">\n            고객센터\n          </Link>\n        </nav>\n        {/* == nav == */}\n        <p className=\"footer__company\">\n          <em>{serviceBasicInfo.companyName}</em>\n        </p>\n        <div className=\"footer__about\">\n          <VisibleComponent\n            shows={serviceBasicInfo.representativeName}\n            TruthyComponent={\n              <p>\n                <span>대표자명 : {serviceBasicInfo.representativeName}</span>\n              </p>\n            }\n          />\n          <VisibleComponent\n            shows={serviceBasicInfo.address}\n            TruthyComponent={\n              <p>\n                <span>\n                  주소 : {serviceBasicInfo.address}{\" \"}\n                  {serviceBasicInfo.addressDetail}\n                </span>\n              </p>\n            }\n          />\n          <VisibleComponent\n            shows={serviceBasicInfo?.representPhoneNo}\n            TruthyComponent={\n              <p>\n                <span>대표전화번호 : {serviceBasicInfo?.representPhoneNo}</span>\n              </p>\n            }\n          />\n          {businessRegistrationNumberInformation?.no && (\n            <p className=\"footer__business-registration\">\n              사업자등록번호 :{\" \"}\n              <span>{businessRegistrationNumberInformation?.no} </span>\n              <a href={businessRegistrationNumberInformation?.url}>\n                [사업자정보확인]\n              </a>\n            </p>\n          )}\n          <VisibleComponent\n            shows={serviceBasicInfo.onlineMarketingBusinessDeclarationNo}\n            TruthyComponent={\n              <p>\n                <span>\n                  통신판매업신고번호 :{\" \"}\n                  {serviceBasicInfo.onlineMarketingBusinessDeclarationNo}\n                </span>\n              </p>\n            }\n          />\n          <VisibleComponent\n            shows={serviceBasicInfo.privacyManagerName}\n            TruthyComponent={\n              <p>\n                <span>\n                  개인정보보호책임자 : {serviceBasicInfo.privacyManagerName}\n                </span>\n              </p>\n            }\n          />\n          <p>호스트제공 : 엔에이치엔커머스(주)</p>\n        </div>\n      </div>\n      <p className=\"copyright\">\n        Copyright &copy; {since} {restMall.companyName} ALL RIGHT RESERVED\n      </p>\n      <div className=\"footer__extra-logo\">\n        {termsConfig.fairLogoUsed && (\n          <img src={termsConfig.fairLogoUrl} alt=\"\" />\n        )}\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import Footer from './Footer';\n\nexport default Footer;\n","import { string } from 'prop-types';\n\nimport TitleModal from '../TitleModal';\n\nconst FullModal = ({ className, ...props }) => (\n  <TitleModal className={`full-modal ${className ?? ''}`} {...props} isFull={true} />\n);\n\nFullModal.propTypes = {\n  className: string,\n};\n\nexport default FullModal;\n","import FullModal from './FullModal';\n\nexport default FullModal;\n","import { useMemo, useState, useEffect } from 'react';\nimport { useSearchParams, useNavigate, Link } from 'react-router-dom';\n\nimport { func, string, bool } from 'prop-types';\n\nimport {\n  RecentKeywordProvider,\n  SearchField,\n  useBannerStateContext,\n  useModalActionContext,\n  useOffCanvasActionContext,\n  IconBtn,\n  CartBtn,\n  IconSVG,\n} from '@shopby/react-components';\n\nimport useSearchKeyword from '../../hooks/useSearchKeyword';\nimport BackButton from '../BackButton';\nimport { useLayoutValueContext } from '../Layout/LayoutProvider';\nimport Nav from '../Nav/Nav';\n\nimport MallLogo from './MallLogo';\n\nconst MainHeader = ({ openCanvas }) => (\n  <button className=\"hamburger-menu header__left-btn\" onClick={openCanvas}>\n    <IconSVG name=\"hamburger\" size={50} strokeWidth={3} />\n    <span className=\"a11y\">좌측 메뉴 보기</span>\n  </button>\n);\nMainHeader.propTypes = {\n  openCanvas: func,\n};\n\nconst SearchKeywordHeader = ({ title }) => {\n  const { openAlert } = useModalActionContext();\n  const [showsSearchKeyword, setShowsSearchKeyword] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const { keyword, searchProductsByKeyword, removeKeyword, updateKeyword } = useSearchKeyword(title);\n  const keywordParam = searchParams.get('keyword');\n\n  const searchKeyword = (_keyword) => {\n    if (!_keyword) {\n      openAlert({\n        message: '키워드를 입력하세요.',\n      });\n\n      return;\n    }\n\n    searchProductsByKeyword(_keyword);\n    setSearchParams({\n      keyword,\n    });\n  };\n\n  useEffect(() => {\n    if (!keywordParam) return;\n\n    searchProductsByKeyword(keywordParam);\n    updateKeyword(keywordParam);\n  }, [keywordParam]);\n\n  return (\n    <>\n      {showsSearchKeyword ? (\n        <SearchField\n          className=\"header__search-field\"\n          searchValue={keyword}\n          onSearchBtnClick={() => searchKeyword(keyword)}\n          onClearBtnClick={removeKeyword}\n          onChange={({ target }) => updateKeyword(target.value)}\n        />\n      ) : (\n        <button className=\"header__title\" onClick={() => setShowsSearchKeyword((prev) => !prev)}>\n          {keyword}\n        </button>\n      )}\n    </>\n  );\n};\nSearchKeywordHeader.propTypes = {\n  title: string,\n};\nconst Content = ({ isMain, hasSearchKeywordHeader, title }) => {\n  const { bannerMap } = useBannerStateContext();\n\n  if (isMain) {\n    return <MallLogo banner={bannerMap.get('LOGO')} />;\n  }\n\n  if (hasSearchKeywordHeader) {\n    return (\n      <RecentKeywordProvider>\n        <SearchKeywordHeader title={title} />\n      </RecentKeywordProvider>\n    );\n  }\n\n  return <h1 className=\"header__title\">{title}</h1>;\n};\n\nContent.propTypes = {\n  isMain: bool,\n  hasSearchKeywordHeader: bool,\n  title: string,\n};\n\nconst Header = () => {\n  const {\n    isMain = false,\n    hasBackBtnOnHeader = false,\n    hasCartBtnOnHeader = false,\n    hasSearchKeywordHeader = false,\n    hasCancelBtnOnHeader = false,\n    title = '',\n  } = useLayoutValueContext();\n  const { openCanvas } = useOffCanvasActionContext();\n  const navigate = useNavigate();\n\n  const canShowShoppingBasket = useMemo(\n    () => (isMain || hasCartBtnOnHeader) && !hasCancelBtnOnHeader,\n    [isMain, hasCartBtnOnHeader]\n  );\n\n  return (\n    <>\n      <header className={`header ${!isMain ? 'header--sub' : ''}`}>\n        {isMain ? (\n          <MainHeader openCanvas={openCanvas} />\n        ) : (\n          hasBackBtnOnHeader && <BackButton label=\"페이지 뒤로 가기\" className=\"header__left-btn\" />\n        )}\n        <Content isMain={isMain} hasSearchKeywordHeader={hasSearchKeywordHeader} title={title} />\n        {canShowShoppingBasket && (\n          <div className=\"header__cart-btn\">\n            <Link to=\"/cart\">\n              <span className=\"a11y\">장바구니 페이지 이동</span>\n              <CartBtn />\n            </Link>\n          </div>\n        )}\n        {hasCancelBtnOnHeader && (\n          <IconBtn className=\"header__cancel-btn\" iconType=\"x-black\" onClick={() => navigate('/')} size=\"xs\" />\n        )}\n      </header>\n      {isMain && <Nav />}\n    </>\n  );\n};\n\nexport default Header;\n","import { Link } from 'react-router-dom';\n\nimport { arrayOf, oneOf, number, string, bool, shape } from 'prop-types';\n\nconst MallLogo = ({ banner }) => {\n  if (!banner) return <></>;\n\n  const { imageSize, banners } = banner;\n  const [bannerInfo] = banners;\n  const { bannerImages } = bannerInfo;\n  const [imageInfo] = bannerImages;\n\n  return (\n    <h1 className=\"header__title\">\n      <Link href={imageInfo.landingUrl} target={imageInfo.openLocationType === 'NEW' ? '_blank' : '_self'}>\n        <img\n          className=\"header__logo-img\"\n          src={imageInfo.imageUrl}\n          alt={imageInfo.description || '(로고) 홈으로 가기'}\n          loading=\"lazy\"\n          width={imageSize.width}\n          height={imageSize.height}\n        />\n      </Link>\n    </h1>\n  );\n};\n\nexport default MallLogo;\n\nMallLogo.propTypes = {\n  banner: shape({\n    skinCode: string,\n    skinName: string,\n    bannerGroupType: string,\n    skinNo: number,\n    imageSize: shape({\n      width: string,\n      height: string,\n    }),\n    banners: arrayOf(\n      shape({\n        visible: bool,\n        resizable: bool,\n        registerDateTime: string,\n        slideBannerConfig: shape({\n          slideSpeedType: string,\n          slideNavigationInfo: shape({\n            buttonSizeType: string,\n            inactiveButtonColor: string,\n            activeButtonColor: string,\n            buttonBorderType: string,\n          }),\n          slideButtonColor: string,\n          slideTime: number,\n          slideNavigationType: string,\n          slideEffectType: string,\n          usableSlideButton: bool,\n        }),\n        platformType: string,\n        bannerNo: number,\n        displayValue: shape({\n          startDateTime: string,\n          endDateTime: string,\n          displayPeriodType: string,\n        }),\n        bannerTitle: string,\n        width: number,\n        updateDateTime: string,\n        sizeUnitType: string,\n        bannerImages: arrayOf(\n          shape({\n            displayValue: shape({\n              startDateTime: string,\n              endDateTime: string,\n              displayPeriodType: string,\n            }),\n            openLocationType: string,\n            inactiveNavigationImageUrl: string,\n            imageUrl: string,\n            displayOrder: number,\n            description: string,\n            imageNo: number,\n            activeNavigationImageUrl: string,\n            landingUrl: string,\n          })\n        ),\n        height: number,\n      })\n    ),\n    bannerGroupName: string,\n    bannerGroupCode: oneOf([\n      'LOGO',\n      'BNSLIDE',\n      'BANNER01',\n      'BANNER02',\n      'BANNER03',\n      'BANNER04',\n      'BANNER05',\n      'BNBOTTOM',\n      'BNBGLEFT',\n      'BNDETAIL',\n    ]),\n  }),\n};\n","import Header from './Header';\n\nexport default Header;\n","import { useEffect, useState, useRef } from \"react\";\nimport { isMobile } from \"react-device-detect\";\nimport { Outlet, useLocation } from \"react-router-dom\";\n\nimport { bool } from \"prop-types\";\n\nimport {\n  BannerProvider,\n  Icon,\n  OffCanvasProvider,\n  SearchAddressProvider,\n  usePageScriptsActionContext,\n  useAuthStateContext,\n  useBoardConfigurationContextAction,\n  useShopbyStatisticsRecorder,\n  useMallStateContext,\n} from \"@shopby/react-components\";\nimport { PLATFORM_TYPE, setGoogleAnalytics } from \"@shopby/shared\";\n\nimport AdminBanner from \"../AdminBanner\";\nimport BottomNav from \"../BottomNav\";\nimport CategoryNav from \"../CategoryNav\";\nimport DesignPopup from \"../DesignPopup\";\nimport Footer from \"../Footer\";\nimport Header from \"../Header\";\nimport Meta from \"../Meta/Meta\";\nimport SearchKeyword from \"../SearchKeyword\";\n\nimport LayoutProvider, { useLayoutValueContext } from \"./LayoutProvider\";\n\nconst platformType = isMobile ? PLATFORM_TYPE.MOBILE_WEB : PLATFORM_TYPE.PC;\n\nconst Layout = () => {\n  const location = useLocation();\n  const { profile, isProfileLoading } = useAuthStateContext();\n  const { clientId, mallProfile, externalServiceConfig } =\n    useMallStateContext();\n  const { applyPageScripts } = usePageScriptsActionContext();\n  const { fetchBoardConfiguration } = useBoardConfigurationContextAction();\n  const { isScriptLoaded, record } = useShopbyStatisticsRecorder({\n    clientId,\n    mallProfile,\n  });\n\n  const pageRef = useRef();\n  const pageInnerRef = useRef();\n\n  useEffect(() => {\n    if (isScriptLoaded && !isProfileLoading) {\n      record(profile?.memberNo);\n    }\n  }, [isScriptLoaded, isProfileLoading, location.pathname]);\n\n  useEffect(() => {\n    const googleAnalyticsId = externalServiceConfig?.googleAnalytics;\n\n    if (!googleAnalyticsId) return;\n\n    setGoogleAnalytics(googleAnalyticsId);\n  }, [location.pathname, externalServiceConfig]);\n\n  useEffect(() => {\n    if (isProfileLoading) return;\n\n    applyPageScripts(\"COMMON\", {\n      getPlatform: () => platformType,\n      profile,\n    });\n    applyPageScripts(\"COMMON_HEAD\");\n    applyPageScripts(\"COMMON_FOOTER\");\n  }, [profile, isProfileLoading, location]);\n\n  const onClickAnchor = (positionY) => {\n    window.scrollTo({\n      top: positionY,\n      behavior: \"smooth\",\n    });\n  };\n\n  useEffect(() => {\n    onClickAnchor(0);\n    fetchBoardConfiguration();\n  }, []);\n\n  return (\n    <LayoutProvider>\n      <div className=\"page\" ref={pageRef}>\n        <DesignPopup refs={{ pageInnerRef, pageRef }} />\n        {/* area-left */}\n        <div className=\"page__side\"></div>\n        <BannerProvider>\n          <Meta />\n          <div className=\"page-inner\" ref={pageInnerRef}>\n            {/* banner--left */}\n            <article className=\"page__content banner--left\">\n              <figure>\n                <AdminBanner bannerId=\"BNBGLEFT\" />\n              </figure>\n            </article>\n            {/* // banner--left */}\n            <OffCanvasProvider>\n              <div className=\"page__content site\">\n                <Header />\n                <main className=\"l-content\">\n                  <Outlet context={platformType} />\n                </main>\n                <Footer />\n                <SearchAddressProvider>\n                  <BottomNavWrap />\n                </SearchAddressProvider>\n                <CategoryNav />\n                <span className=\"fab-top-down\">\n                  <button\n                    className=\"fab-btn fab-btn--top\"\n                    onClick={() => onClickAnchor(0)}\n                  >\n                    <Icon name=\"angle-down\" className=\"fab-btn__top\" />\n                    <span className=\"a11y\">페이지 상단으로 가기</span>\n                  </button>\n                </span>\n              </div>\n            </OffCanvasProvider>\n          </div>\n        </BannerProvider>\n        {/* area right */}\n        <div className=\"page__side\"></div>\n      </div>\n    </LayoutProvider>\n  );\n};\n\nconst BottomNavWrap = () => {\n  const { hasBottomNav } = useLayoutValueContext();\n  const [openSearchFullModal, setOpenSearchFullModal] = useState(false);\n\n  if (hasBottomNav)\n    return (\n      <>\n        <BottomNav search={() => setOpenSearchFullModal(true)} />\n        {openSearchFullModal && (\n          <SearchKeyword openModal={setOpenSearchFullModal} />\n        )}\n      </>\n    );\n\n  return <></>;\n};\n\nexport default Layout;\n\nLayout.propTypes = {\n  isMain: bool,\n  hasBottomNav: bool,\n  hasHomeBtn: bool,\n  hasBackBtn: bool,\n  hasCartBtn: bool,\n};\n","import { useContext, useMemo, useState, createContext } from 'react';\n\nimport { oneOfType, node, element } from 'prop-types';\n\nexport const LAYOUT_DEFAULT_STATE = {\n  isMain: false,\n  hasBackBtnOnHeader: false,\n  hasHomeBtnOnHeader: false,\n  hasCartBtnOnHeader: false,\n  hasSearchKeywordHeader: false,\n  hasCancelBtnOnHeader: false,\n  hasBottomNav: false,\n  title: '',\n};\n\nconst LayoutActionContext = createContext(null);\nconst LayoutValueContext = createContext(null);\n\nconst LayoutProvider = ({ children }) => {\n  const [layoutStatus, setLayoutStatus] = useState(LAYOUT_DEFAULT_STATE);\n  const action = useMemo(\n    () => ({\n      changeLayoutStatus: (layoutStatus) =>\n        setLayoutStatus({\n          ...LAYOUT_DEFAULT_STATE,\n          ...layoutStatus,\n        }),\n    }),\n    [setLayoutStatus]\n  );\n\n  return (\n    <LayoutActionContext.Provider value={action}>\n      <LayoutValueContext.Provider value={layoutStatus}>{children}</LayoutValueContext.Provider>\n    </LayoutActionContext.Provider>\n  );\n};\n\nexport const useLayoutActionContext = () => {\n  const context = useContext(LayoutActionContext);\n  if (!context) throw new Error('INVALID_LayoutActionContext');\n\n  return context;\n};\n\nexport const useLayoutValueContext = () => {\n  const context = useContext(LayoutValueContext);\n  if (!context) throw new Error('INVALID_LayoutValueContext');\n\n  return context;\n};\n\nexport default LayoutProvider;\n\nLayoutProvider.propTypes = {\n  children: oneOfType([node, element]).isRequired,\n};\n","import Layout from './Layout';\n\nexport default Layout;\n","import { isMobile } from 'react-device-detect';\nimport { Helmet } from 'react-helmet';\n\nimport { useBannerStateContext, useMallStateContext } from '@shopby/react-components';\nimport { PLATFORM_TYPE } from '@shopby/shared';\n\nconst Meta = () => {\n  const { mallName, mall } = useMallStateContext();\n  const { bannerMap } = useBannerStateContext();\n  const platform = isMobile ? PLATFORM_TYPE.MOBILE_WEB : PLATFORM_TYPE.PC;\n  const url = mall.url?.[platform.toLocaleLowerCase()];\n  const banner = bannerMap.get('LOGO') ?? {};\n\n  return (\n    <Helmet>\n      <meta name=\"author\" content={mallName} />\n      <meta name=\"description\" content={mallName} />\n      <meta name=\"keywords\" content={mallName} />\n\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:title\" content={mallName} />\n      <meta property=\"og:image\" content={banner?.banners?.[0].bannerImages?.[0].imageUrl} />\n      <meta property=\"og:url\" content={url} />\n      <meta property=\"og:description\" content=\"여기를 눌러 링크를 확인하세요.\" />\n      <meta property=\"og:image:width\" content=\"436\" />\n      <meta property=\"og:image:height\" content=\"134\" />\n\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:title\" content={mallName} />\n      <meta name=\"twitter:description\" content=\"여기를 눌러 링크를 확인하세요.\" />\n      <meta name=\"twitter:image\" content={banner?.banners?.[0].bannerImages?.[0].imageUrl} />\n      <title>{mallName}</title>\n    </Helmet>\n  );\n};\n\nexport default Meta;\n","import { NavLink } from 'react-router-dom';\n\nimport { string } from 'prop-types';\n\nimport { Slide, Slider, useMallStateContext } from '@shopby/react-components';\n\nconst Nav = ({ className = '' }) => {\n  const { categories } = useMallStateContext();\n\n  if (!categories) return <></>;\n\n  return (\n    <nav className={`nav ${className}`}>\n      <Slider slidesPerView=\"auto\">\n        {categories.multiLevelCategories.map((category) => (\n          <Slide key={category.categoryNo}>\n            <NavLink\n              to={`/products?categoryNo=${category.categoryNo}`}\n              className={({ isActive }) => (isActive ? 'is-active nav__link' : 'nav__link')}\n            >\n              {category.label}\n            </NavLink>\n          </Slide>\n        ))}\n      </Slider>\n    </nav>\n  );\n};\n\nexport default Nav;\n\nNav.propTypes = {\n  className: string,\n};\n","import { func } from 'prop-types';\n\nimport { CustomModal, SearchField, RecentKeyword, RecentKeywordProvider } from '@shopby/react-components';\n\nimport useSearchKeyword from '../../hooks/useSearchKeyword';\nimport BackButton from '../BackButton';\n\nconst SearchKeywordContent = ({ openModal }) => {\n  const { keyword, searchProductsByKeyword, removeKeyword, updateKeyword } = useSearchKeyword('');\n\n  const searchKeyword = (_keyword) => {\n    searchProductsByKeyword(_keyword);\n    location.href = `/products?keyword=${encodeURIComponent(_keyword)}`;\n  };\n\n  return (\n    <>\n      <div className=\"search-keyword-modal__top\">\n        <BackButton className=\"search-keyword-modal__back-btn\" onClick={() => openModal(false)} />\n        <SearchField\n          searchValue={keyword}\n          onSearchBtnClick={() => searchKeyword(keyword)}\n          onClearBtnClick={removeKeyword}\n          onChange={({ target }) => updateKeyword(target.value)}\n        />\n      </div>\n      <RecentKeyword onKeywordClick={(_keyword) => searchKeyword(_keyword)} />\n    </>\n  );\n};\n\nSearchKeywordContent.propTypes = {\n  openModal: func,\n};\n\nconst SearchKeyword = ({ openModal }) => (\n  <CustomModal className=\"title-modal--full search-keyword-modal\">\n    <RecentKeywordProvider>\n      <div>\n        <SearchKeywordContent openModal={openModal} />\n      </div>\n    </RecentKeywordProvider>\n  </CustomModal>\n);\n\nexport default SearchKeyword;\n\nSearchKeyword.propTypes = {\n  openModal: func,\n};\n","import SearchKeyword from './SearchKeyword';\n\nexport default SearchKeyword;\n","import { func, oneOfType, node, element, string, bool } from 'prop-types';\n\nimport { CustomModal, IconBtn } from '@shopby/react-components';\n\nconst TitleModal = ({ className, title, onClose, children, classModifier, isFull, ...props }) => (\n  <CustomModal className={className} {...props}>\n    <div\n      className={`title-modal${classModifier ? ` title-modal--${classModifier}` : ''}${\n        isFull ? ` title-modal--full` : ''\n      }`}\n    >\n      <div className=\"title-modal__header\">\n        <h2 className=\"title-modal__title\">{title}</h2>\n        {onClose && (\n          <IconBtn\n            className=\"title-modal__close-btn\"\n            iconType=\"x-black\"\n            onClick={() => onClose()}\n            hiddenLabel={true}\n            label=\"모달 닫기\"\n          />\n        )}\n      </div>\n      <div className=\"title-modal__content\">{children}</div>\n    </div>\n  </CustomModal>\n);\n\nexport default TitleModal;\n\nTitleModal.propTypes = {\n  id: string,\n  className: string,\n  title: string,\n  onClose: func,\n  children: oneOfType([node, element]),\n  classModifier: string,\n  isFull: bool,\n};\n","import TitleModal from './TitleModal';\n\nexport default TitleModal;\n","export const NOTICE_BOARD_ID = 'notice';\n","import { useState } from 'react';\n\nimport { useRecentKeywordActionContext } from '@shopby/react-components';\n\nconst useSearchKeyword = (initialKeyword) => {\n  const [keyword, setKeyword] = useState(initialKeyword ?? '');\n\n  const { add } = useRecentKeywordActionContext();\n\n  const updateKeyword = (_keyword) => setKeyword(_keyword);\n\n  const removeKeyword = () => setKeyword('');\n\n  const searchProductsByKeyword = (_keyword) => {\n    add(_keyword);\n    setKeyword(keyword);\n  };\n\n  return {\n    searchProductsByKeyword,\n    removeKeyword,\n    updateKeyword,\n    keyword,\n  };\n};\n\nexport default useSearchKeyword;\n"],"names":[],"sourceRoot":""}