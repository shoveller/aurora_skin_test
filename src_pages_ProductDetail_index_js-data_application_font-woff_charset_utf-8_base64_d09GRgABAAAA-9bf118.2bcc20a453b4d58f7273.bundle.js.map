{"version":3,"file":"src_pages_ProductDetail_index_js-data_application_font-woff_charset_utf-8_base64_d09GRgABAAAA-9bf118.2bcc20a453b4d58f7273.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AAEA;AAEA;AAAA;AAAA;AACA;AAAA;AAEA;AAEA;AAEA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AACA;AAAA;AAEA;AAEA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAIA;AAEA;AAEA;AACA;AACA;AAYA;;;;;;;;;;;;;;ACxDA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAEA;AACA;AAEA;AAQA;AAEA;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAGA;AAAA;AACA;AAAA;AAEA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAEA;AACA;AADA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAIA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AAEA;AAEA;AAEA;AAGA;AAAA;AAGA;AACA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAKA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AAGA;AACA;AAEA;AAGA;AACA;AAKA;AAKA;AAGA;AAEA;AAEA;AACA;AACA;;;;;;;;;;;;;;ACpLA;AAEA;;;;;;;;;;;;;;;;ACFA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACrBA;AAEA;;;;;;;;;;;;;;;;;;;;;ACFA;AAEA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAEA;;;;;;;;;;;;;;ACZA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAIA;AACA;AAAA;AAIA;AACA;AAAA;AACA;AAAA;AAGA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACxDA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAEA;AAEA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAIA;AAAA;AAEA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACtCA;AAEA;;;;;;;;;;;;;ACFA;;;;;;;;;;;;;;;;ACAA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;AC7BA;AAEA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAEA;AAAA;AAAA;AAEA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAKA;AAEA;AAAA;AACA;AAAA;AAGA;AAGA;;;;;;;;;;;;;;AC7CA;AAEA;;;;;;;;;;;;;;;;;;;;;;;ACFA;AAEA;AASA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAIA;AAGA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAEA;AAIA;AAAA;AAAA;AAAA;AAIA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/CA;AACA;AACA;AAEA;AAqaA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;ACjJA;AAEA;AAOA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAEA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAGA;AAGA;AAEA;;;;;;;;;;;;;;;;;ACtFA;AAOA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAIA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AACA;AAEA;AAEA;AAgBA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAGA;AAFA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AADA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAIA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AAIA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AAAA;AAAA;AAEA;AAAA;AAGA;AAAA;AAGA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAIA;AAEA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;AC1LA;AAEA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACxBA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AAEA;AACA;AAAA;AAEA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AACA;AAAA;AAIA;AAMA;AAGA;AAEA;;;;;;;;;;;;;;;;;;;;;ACtCA;AAEA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AAEA;AAAA;AASA;AAGA;AAEA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzxBA;AAAA;AAAA;AA0BA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AAAA;AAAA;AAJA;AAMA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AAEA;AAGA;AACA;AACA;AAAA;AAGA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AAGA;AAAA;AAEA;AAAA;AACA;AACA;AAGA;AAGA;AAGA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACnLA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AACA;AAAA;AAEA;AAAA;AAEA;AACA;AAIA;AAGA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxFA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AAGA;AAAA;AAIA;AAAA;AAMA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AAEA;AACA;AACA;AAAA;AAIA;AAEA;AAAA;AACA;AAAA;AAKA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AAKA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAIA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACjHA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AAMA;AACA;;;;;;;;;;;;;;AC3BA;AAEA;;;;;;;;;;;;;;;ACFA;AAEA","sources":["webpack://@shopby/react-skin/./src/components/AdminBanner/AdminBanner.jsx","webpack://@shopby/react-skin/./src/components/AdminBanner/index.js","webpack://@shopby/react-skin/./src/components/CouponList/CouponList.jsx","webpack://@shopby/react-skin/./src/components/CouponList/index.js","webpack://@shopby/react-skin/./src/components/CustomBanner/CustomBanner.jsx","webpack://@shopby/react-skin/./src/components/CustomBanner/index.js","webpack://@shopby/react-skin/./src/components/FullModal/FullModal.jsx","webpack://@shopby/react-skin/./src/components/FullModal/index.js","webpack://@shopby/react-skin/./src/components/Layout/LayoutProvider.jsx","webpack://@shopby/react-skin/./src/components/TitleModal/TitleModal.jsx","webpack://@shopby/react-skin/./src/components/TitleModal/index.js","webpack://@shopby/react-skin/./src/constants/debounceTime.js","webpack://@shopby/react-skin/./src/hooks/useLayoutChanger.js","webpack://@shopby/react-skin/./src/pages/ProductDetail/Content/Content.jsx","webpack://@shopby/react-skin/./src/pages/ProductDetail/Content/index.js","webpack://@shopby/react-skin/./src/pages/ProductDetail/ImageSlider.jsx","webpack://@shopby/react-skin/./src/pages/ProductDetail/ProductDetail.jsx","webpack://@shopby/react-skin/./src/pages/ProductDetail/Purchase/OptionQuantity.jsx","webpack://@shopby/react-skin/./src/pages/ProductDetail/Purchase/OptionSelector.jsx","webpack://@shopby/react-skin/./src/pages/ProductDetail/Purchase/Purchase.jsx","webpack://@shopby/react-skin/./src/pages/ProductDetail/Purchase/TextOption.jsx","webpack://@shopby/react-skin/./src/pages/ProductDetail/Purchase/index.js","webpack://@shopby/react-skin/./src/pages/ProductDetail/RelatedProduct.jsx","webpack://@shopby/react-skin/./src/pages/ProductDetail/Summary/AccumulationInformation.jsx","webpack://@shopby/react-skin/./src/pages/ProductDetail/Summary/DownloadCouponButton.jsx","webpack://@shopby/react-skin/./src/pages/ProductDetail/Summary/FreightInformation.jsx","webpack://@shopby/react-skin/./src/pages/ProductDetail/Summary/PriceInformation.jsx","webpack://@shopby/react-skin/./src/pages/ProductDetail/Summary/Summary.jsx","webpack://@shopby/react-skin/./src/pages/ProductDetail/Summary/index.js","webpack://@shopby/react-skin/./src/pages/ProductDetail/index.js"],"sourcesContent":["import { string, oneOf } from 'prop-types';\n\nimport { useBannerStateContext } from '@shopby/react-components';\n\nimport CustomBanner from '../CustomBanner';\n\nconst AdminBanner = ({ className, bannerId }) => {\n  const { bannerMap } = useBannerStateContext();\n\n  if (!bannerMap) return <></>;\n\n  const banner = bannerMap.get(bannerId);\n\n  const { banners, imageSize, bannerGroupName } = banner ?? {};\n\n  if (!banners || !banners.length) return <></>;\n\n  const [bannerInfo] = banners;\n  const { bannerImages, visible } = bannerInfo;\n\n  if (!visible) return <></>;\n\n  return (\n    <>\n      {bannerImages?.map((image) => (\n        <CustomBanner\n          key={image.imageNo}\n          className={className}\n          href={image.landingUrl ?? ''}\n          target={image.openLocationType === 'NEW' ? '_blank' : '_self'}\n          src={image.imageUrl}\n          alt={image.description || bannerGroupName}\n          width={imageSize.width}\n          height={imageSize.height}\n        />\n      ))}\n    </>\n  );\n};\n\nexport default AdminBanner;\n\nAdminBanner.propTypes = {\n  className: string,\n  bannerId: oneOf([\n    'LOGO',\n    'BNSLIDE',\n    'BANNER01',\n    'BANNER02',\n    'BANNER03',\n    'BANNER04',\n    'BANNER05',\n    'BNBOTTOM',\n    'BNBGLEFT',\n    'BNDETAIL',\n  ]),\n};\n","import AdminBanner from './AdminBanner';\n\nexport default AdminBanner;\n","import { useCallback, useMemo, useState } from \"react\";\n\nimport { debounce } from \"lodash-es\";\nimport { bool } from \"prop-types\";\n\nimport {\n  Coupon,\n  useCouponByProductStateContext,\n  useCouponByProductActionContext,\n  VisibleComponent,\n  Icon,\n  useModalActionContext,\n} from \"@shopby/react-components\";\nimport { convertToKoreanCurrency } from \"@shopby/shared\";\n\nimport { COUPON_DOWNLOAD_BUTTON_DEBOUNCE_TIME } from \"../../constants/debounceTime\";\n\nconst COUPON_TYPE_LABEL = {\n  PRODUCT: \"상품\",\n  CART: \"주문\",\n  CART_DELIVERY: \"장바구니 배송비\",\n};\n\n// 쿠폰 할인 정보\nconst getDiscountInfo = (coupon) => {\n  const limitSalePrice = coupon.useConstraint.minSalePrice;\n\n  if (coupon.discountInfo.discountRate) {\n    return {\n      amount: coupon.discountInfo.discountRate,\n      unit: \"%\",\n      maxAmount: coupon.discountInfo.maxDiscountAmt,\n      limitSalePrice,\n    };\n  }\n\n  return {\n    amount: convertToKoreanCurrency(coupon.discountInfo.discountAmt),\n    unit: \"원\",\n    maxAmount: 0,\n    limitSalePrice,\n  };\n};\n\nconst IssuedCoupon = () => (\n  <div className=\"coupon__issued\">\n    <Icon name=\"check-white\" />\n    <p>발급완료</p>\n  </div>\n);\n\nconst EmptyCoupons = () => (\n  <div className=\"empty-list\">\n    <p>등록된 쿠폰이 없습니다.</p>\n  </div>\n);\n\nconst Coupons = ({ allIssued }) => {\n  const { coupons } = useCouponByProductStateContext();\n  const { downloadCouponByCouponNo, fetchIssuableCouponsByProductNo } =\n    useCouponByProductActionContext();\n  const { openAlert } = useModalActionContext();\n\n  const [shouldPreventDoubleDownload, setShouldPreventDoubleDownload] =\n    useState(false);\n  const [issuedCouponNos, setIssuedCouponNos] = useState([]);\n\n  if (!coupons.length) return <EmptyCoupons />;\n\n  const downloadableCoupons = useMemo(\n    () => coupons.filter(({ downloadable }) => downloadable),\n    [coupons]\n  );\n\n  const fetchCoupons = () => {\n    setShouldPreventDoubleDownload(false);\n\n    fetchIssuableCouponsByProductNo({\n      includesCartCoupon: true,\n    });\n  };\n\n  const handleDownloadCoupon = debounce(\n    useCallback(({ couponNo }) => {\n      (async () => {\n        if (shouldPreventDoubleDownload) return;\n\n        setShouldPreventDoubleDownload(true);\n\n        try {\n          await downloadCouponByCouponNo({\n            couponNo,\n          });\n\n          setIssuedCouponNos((prev) => [...prev, couponNo]);\n\n          fetchCoupons();\n        } catch (e) {\n          const message = e?.error?.serverError?.message;\n\n          if (message) {\n            await openAlert({\n              message,\n            });\n          }\n\n          fetchCoupons();\n        }\n      })();\n    }, []),\n    COUPON_DOWNLOAD_BUTTON_DEBOUNCE_TIME\n  );\n\n  return (\n    <ul className=\"coupons\">\n      {downloadableCoupons.map((coupon) => {\n        const { amount, unit, maxAmount, limitSalePrice } =\n          getDiscountInfo(coupon);\n        const hasBeenIssued = allIssued\n          ? allIssued\n          : issuedCouponNos.includes(coupon.couponNo);\n        const modifier = hasBeenIssued ? \"issued\" : \"\";\n\n        const couponTypeLabel = COUPON_TYPE_LABEL[coupon.couponType];\n\n        return (\n          <li\n            className={`coupon__wrap${\n              modifier ? ` coupon__wrap--${modifier}` : \"\"\n            }`}\n            key={coupon.couponNo}\n          >\n            <Coupon\n              couponName={coupon.couponName}\n              DiscountComponent={\n                <p className=\"coupon__discount-information\">\n                  <span className=\"coupon__discount-amount\">\n                    {amount} {unit}\n                  </span>\n                  <span className=\"coupon__discount-label\">\n                    {couponTypeLabel} 할인\n                  </span>\n                </p>\n              }\n              disabled={!coupon.downloadable || shouldPreventDoubleDownload}\n              onDownloadCoupon={() =>\n                !shouldPreventDoubleDownload && handleDownloadCoupon(coupon)\n              }\n            >\n              <VisibleComponent\n                shows={!!modifier}\n                TruthyComponent={<IssuedCoupon />}\n              />\n              <VisibleComponent\n                shows={maxAmount > 0}\n                TruthyComponent={\n                  <p>최대 {convertToKoreanCurrency(maxAmount)} 원 할인</p>\n                }\n              />\n              <VisibleComponent\n                shows={limitSalePrice > 0}\n                TruthyComponent={\n                  <p>\n                    {convertToKoreanCurrency(limitSalePrice)} 원 이상 구매 시\n                    사용가능\n                  </p>\n                }\n              />\n            </Coupon>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default Coupons;\n\nCoupons.propTypes = {\n  allIssued: bool,\n};\n","import CouponList from './CouponList';\n\nexport default CouponList;\n","import { oneOf, string } from 'prop-types';\n\nconst CustomBanner = ({ className, href, target, src, alt, width, height }) =>\n  href ? (\n    <a className={className} href={href} rel=\"noreferrer\" target={target}>\n      <img src={src} alt={alt} loading=\"lazy\" width={width} height={height} />\n    </a>\n  ) : (\n    <img className={className} src={src} alt={alt} loading=\"lazy\" width={width} height={height} />\n  );\n\nexport default CustomBanner;\n\nCustomBanner.propTypes = {\n  className: string,\n  href: string,\n  target: oneOf(['_blank', '_self']),\n  src: string,\n  alt: string,\n  width: string,\n  height: string,\n};\n","import CustomBanner from './CustomBanner';\n\nexport default CustomBanner;\n","import { string } from 'prop-types';\n\nimport TitleModal from '../TitleModal';\n\nconst FullModal = ({ className, ...props }) => (\n  <TitleModal className={`full-modal ${className ?? ''}`} {...props} isFull={true} />\n);\n\nFullModal.propTypes = {\n  className: string,\n};\n\nexport default FullModal;\n","import FullModal from './FullModal';\n\nexport default FullModal;\n","import { useContext, useMemo, useState, createContext } from 'react';\n\nimport { oneOfType, node, element } from 'prop-types';\n\nexport const LAYOUT_DEFAULT_STATE = {\n  isMain: false,\n  hasBackBtnOnHeader: false,\n  hasHomeBtnOnHeader: false,\n  hasCartBtnOnHeader: false,\n  hasSearchKeywordHeader: false,\n  hasCancelBtnOnHeader: false,\n  hasBottomNav: false,\n  title: '',\n};\n\nconst LayoutActionContext = createContext(null);\nconst LayoutValueContext = createContext(null);\n\nconst LayoutProvider = ({ children }) => {\n  const [layoutStatus, setLayoutStatus] = useState(LAYOUT_DEFAULT_STATE);\n  const action = useMemo(\n    () => ({\n      changeLayoutStatus: (layoutStatus) =>\n        setLayoutStatus({\n          ...LAYOUT_DEFAULT_STATE,\n          ...layoutStatus,\n        }),\n    }),\n    [setLayoutStatus]\n  );\n\n  return (\n    <LayoutActionContext.Provider value={action}>\n      <LayoutValueContext.Provider value={layoutStatus}>{children}</LayoutValueContext.Provider>\n    </LayoutActionContext.Provider>\n  );\n};\n\nexport const useLayoutActionContext = () => {\n  const context = useContext(LayoutActionContext);\n  if (!context) throw new Error('INVALID_LayoutActionContext');\n\n  return context;\n};\n\nexport const useLayoutValueContext = () => {\n  const context = useContext(LayoutValueContext);\n  if (!context) throw new Error('INVALID_LayoutValueContext');\n\n  return context;\n};\n\nexport default LayoutProvider;\n\nLayoutProvider.propTypes = {\n  children: oneOfType([node, element]).isRequired,\n};\n","import { func, oneOfType, node, element, string, bool } from 'prop-types';\n\nimport { CustomModal, IconBtn } from '@shopby/react-components';\n\nconst TitleModal = ({ className, title, onClose, children, classModifier, isFull, ...props }) => (\n  <CustomModal className={className} {...props}>\n    <div\n      className={`title-modal${classModifier ? ` title-modal--${classModifier}` : ''}${\n        isFull ? ` title-modal--full` : ''\n      }`}\n    >\n      <div className=\"title-modal__header\">\n        <h2 className=\"title-modal__title\">{title}</h2>\n        {onClose && (\n          <IconBtn\n            className=\"title-modal__close-btn\"\n            iconType=\"x-black\"\n            onClick={() => onClose()}\n            hiddenLabel={true}\n            label=\"모달 닫기\"\n          />\n        )}\n      </div>\n      <div className=\"title-modal__content\">{children}</div>\n    </div>\n  </CustomModal>\n);\n\nexport default TitleModal;\n\nTitleModal.propTypes = {\n  id: string,\n  className: string,\n  title: string,\n  onClose: func,\n  children: oneOfType([node, element]),\n  classModifier: string,\n  isFull: bool,\n};\n","import TitleModal from './TitleModal';\n\nexport default TitleModal;\n","export const COUPON_DOWNLOAD_BUTTON_DEBOUNCE_TIME = 300;\n","import { useEffect } from 'react';\n\nimport { LAYOUT_DEFAULT_STATE, useLayoutActionContext } from '../components/Layout/LayoutProvider';\n\n/**\n * 레이아웃의 헤더 및 푸터 형태 설정을 할 수 있는 커스텀 훅.\n * 인자 객체로 담지 않은 값들은 기본 값으로 설정됩니다.\n *\n * [기본 값]\n * isMain: false,\n * hasBackBtnOnHeader: false,\n * hasHomeBtnOnHeader: false,\n * hasCartBtnOnHeader: false,\n * hasBottomNav: false,\n * hasCancelBtnOnHeader: false,\n * title: '',\n * @param {{ isMain?: boolean, hasHomeBtnOnHeader?: boolean, hasBackBtnOnHeader?: boolean, hasCartBtnOnHeader?: boolean, hasCancelBtnOnHeader?: boolean, hasBottomNav?: boolean, title?: string }} layoutStatus\n */\n\nconst useLayoutChanger = (layoutStatus = LAYOUT_DEFAULT_STATE) => {\n  const { changeLayoutStatus } = useLayoutActionContext();\n\n  useEffect(() => {\n    if (changeLayoutStatus) {\n      changeLayoutStatus(layoutStatus);\n    }\n  }, [changeLayoutStatus, layoutStatus]);\n};\n\nexport default useLayoutChanger;\n","import { useMemo, lazy, Suspense, useRef, useEffect } from 'react';\n\nimport { Tabs, useTabsStateContext } from '@shopby/react-components';\n\nconst LAZY_COMPONENT_MAP = {\n  DETAIL: lazy(() => import('./Detail')),\n  REVIEW: lazy(() => import('../Review')),\n  INQUIRY: lazy(() => import('../Inquiry')),\n  SHIPPING_CLAIM: lazy(() => import('./ShippingClaim')),\n};\n\nconst ActiveComponent = () => {\n  const { currentTab } = useTabsStateContext();\n\n  const Component = useMemo(() => LAZY_COMPONENT_MAP[currentTab], [currentTab]);\n\n  const boxRef = useRef(null);\n\n  useEffect(() => {\n    boxRef?.current.scrollIntoView({ behavior: 'smooth' });\n  }, [currentTab]);\n\n  useEffect(() => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'auto',\n    });\n  }, []);\n\n  return (\n    <div className=\"product-content__box\" ref={boxRef}>\n      <Suspense fallback={null}>\n        <Component />\n      </Suspense>\n    </div>\n  );\n};\n\nconst Content = () => (\n  <section className=\"l-panel product-content\">\n    <Tabs />\n    <ActiveComponent />\n  </section>\n);\n\nexport default Content;\n","import Content from './Content';\n\nexport default Content;\n","import { useMemo } from 'react';\n\nimport {\n  Slider,\n  Slide,\n  ThumbItem,\n  useProductDetailStateContext,\n  Skeleton,\n  VisibleComponent,\n} from '@shopby/react-components';\n\nconst ImageSlider = () => {\n  const {\n    productDetail: { images },\n  } = useProductDetailStateContext();\n\n  const sliderConfig = useMemo(\n    () => ({\n      pagination: {\n        clickable: true,\n      },\n      navigation: false,\n      loop: false,\n      slidesPerView: 'auto',\n    }),\n    [images]\n  );\n\n  return (\n    <>\n      <VisibleComponent\n        shows={images.length > 0}\n        TruthyComponent={\n          <Slider className=\"product-image-slider\" {...sliderConfig}>\n            {images.map((imageInfo, idx) => (\n              <Slide key={idx}>\n                <ThumbItem {...imageInfo} />\n              </Slide>\n            ))}\n          </Slider>\n        }\n        FalsyComponent={<Skeleton type=\"SQUARE\" />}\n      />\n    </>\n  );\n};\n\nexport default ImageSlider;\n","import { useEffect, useMemo } from 'react';\nimport { isMobile } from 'react-device-detect';\nimport { useSearchParams } from 'react-router-dom';\n\nimport {\n  ProductDetailProvider,\n  TabsProvider,\n  useProductDetailStateContext,\n  ProductReviewProvider,\n  useProductReviewStateContext,\n  useTabsActiveContext,\n  ProductInquiryProvider,\n  useProductInquiryStateContext,\n  ProductOptionProvider,\n  CouponByProductProvider,\n  CartProvider,\n  OrderSheetProvider,\n  useProductInquiryActionContext,\n  useProductDetailActionContext,\n  useProductOptionActionContext,\n  usePageScriptsActionContext,\n  NaverPayProvider,\n  useMallStateContext,\n} from '@shopby/react-components';\n\nimport AdminBanner from '../../components/AdminBanner';\nimport useLayoutChanger from '../../hooks/useLayoutChanger';\n\nimport Content from './Content';\nimport ImageSlider from './ImageSlider';\nimport Purchase from './Purchase';\nimport RelatedProduct from './RelatedProduct';\nimport Summary from './Summary';\n\nconst makeTabs = (reviewCount = 0, inquiryCount = 0) => [\n  {\n    value: 'DETAIL',\n    label: '상품 상세정보',\n  },\n  {\n    value: 'REVIEW',\n    label: `상품후기 (${reviewCount})`,\n  },\n  {\n    value: 'INQUIRY',\n    label: `상품 Q&A (${inquiryCount})`,\n  },\n  {\n    value: 'SHIPPING_CLAIM',\n    label: '배송/교환/반품',\n  },\n];\n\nconst ProductDetailContent = () => {\n  const [searchParams] = useSearchParams();\n  const productNo = Number(searchParams.get('productNo'));\n\n  const {\n    productDetail: { productName },\n    originProductDetail,\n  } = useProductDetailStateContext();\n\n  const { applyPageScripts } = usePageScriptsActionContext();\n  const { fetchProductDetail, fetchRelatedProducts } = useProductDetailActionContext();\n  const { fetchSelectorOptions } = useProductOptionActionContext();\n  const { updateTabs } = useTabsActiveContext();\n  const { totalCount: reviewCount } = useProductReviewStateContext();\n  const { totalCount: inquiryCount } = useProductInquiryStateContext();\n  const { searchInquiries } = useProductInquiryActionContext();\n\n  useLayoutChanger({ hasBackBtnOnHeader: true, title: productName });\n\n  useEffect(() => {\n    if (!originProductDetail) return;\n\n    applyPageScripts('PRODUCT', { product: originProductDetail });\n  }, [originProductDetail]);\n\n  useEffect(() => {\n    searchInquiries();\n\n    if (productNo > 0) {\n      fetchProductDetail({\n        productNo,\n      });\n\n      fetchRelatedProducts({\n        productNo,\n      });\n\n      fetchSelectorOptions({\n        productNo,\n      });\n    }\n  }, [productNo]);\n\n  useEffect(() => updateTabs(makeTabs(reviewCount, inquiryCount)), [reviewCount, inquiryCount]);\n\n  return (\n    <div className=\"product-detail\">\n      <ImageSlider />\n      <Summary />\n      <RelatedProduct />\n      <AdminBanner bannerId=\"BNDETAIL\" />\n      <Content />\n    </div>\n  );\n};\n\nconst ProductDetail = () => {\n  const { clientId, mallProfile } = useMallStateContext();\n  const [searchParams] = useSearchParams();\n  const productNo = Number(searchParams.get('productNo'));\n\n  const initialTabs = useMemo(() => makeTabs(), []);\n\n  return (\n    <ProductDetailProvider productNo={productNo}>\n      <ProductReviewProvider productNo={productNo}>\n        <ProductInquiryProvider productNo={productNo}>\n          <TabsProvider\n            initialState={{\n              currentTab: 'DETAIL',\n              tabs: initialTabs,\n            }}\n          >\n            <OrderSheetProvider>\n              <NaverPayProvider clientId={clientId} mallProfile={mallProfile} platform={isMobile ? 'MOBILE_WEB' : 'PC'}>\n                <CartProvider>\n                  <ProductOptionProvider productNo={productNo}>\n                    <CouponByProductProvider productNo={productNo}>\n                      <ProductDetailContent />\n                    </CouponByProductProvider>\n                    <Purchase />\n                  </ProductOptionProvider>\n                </CartProvider>\n              </NaverPayProvider>\n            </OrderSheetProvider>\n          </TabsProvider>\n        </ProductInquiryProvider>\n      </ProductReviewProvider>\n    </ProductDetailProvider>\n  );\n};\n\nexport default ProductDetail;\n","import { useMemo } from 'react';\n\nimport {\n  useProductOptionActionContext,\n  useProductOptionStateContext,\n  Quantity,\n  VisibleComponent,\n} from '@shopby/react-components';\n\nimport TextOption from './TextOption';\n\nconst OptionQuantity = () => {\n  const { quantities, textOptionMapByOption, textOptionsByProduct, flatOptions } = useProductOptionStateContext();\n  const { deleteQuantityBy, changeQuantityCount, changeTextOptionByOption, changeTextOptionByProduct } =\n    useProductOptionActionContext();\n\n  const hasOnlyOneOption = useMemo(() => flatOptions.length === 1, [flatOptions]);\n\n  return (\n    <VisibleComponent\n      shows={quantities?.length > 0}\n      TruthyComponent={\n        <>\n          {quantities.map(({ selectedKey, quantity }) => (\n            <Quantity\n              key={selectedKey}\n              className={`${hasOnlyOneOption ? 'undeletable' : ''}`}\n              count={quantity?.count}\n              onChangeValue={(value) => {\n                changeQuantityCount({ selectedKey, count: Number(value) });\n              }}\n              onDelete={() => {\n                deleteQuantityBy(selectedKey);\n              }}\n              info={{\n                id: selectedKey,\n                title: quantity?.selectedOptionValues.join(' | '),\n                price: quantity?.totalPrice ?? 0,\n              }}\n            >\n              {textOptionMapByOption?.has(selectedKey) &&\n                [...textOptionMapByOption.get(selectedKey)].map(({ textOptionKey, inputLabel, required }) => (\n                  <TextOption\n                    key={textOptionKey}\n                    id={textOptionKey}\n                    inputLabel={inputLabel}\n                    required={required}\n                    placeholder={`${inputLabel} (을)를 입력하세요.`}\n                    limitCount={{\n                      character: 1_000,\n                    }}\n                    onChange={({ character: { value } }) => {\n                      changeTextOptionByOption({\n                        selectedOptionKey: selectedKey,\n                        textOptionKey,\n                        value,\n                      });\n                    }}\n                  />\n                ))}\n            </Quantity>\n          ))}\n          {textOptionsByProduct?.map(({ textOptionKey, textOption: { inputLabel, required } }) => (\n            <TextOption\n              key={textOptionKey}\n              id={textOptionKey}\n              inputLabel={inputLabel}\n              required={required}\n              placeholder={`${inputLabel} (을)를 입력하세요.`}\n              limitCount={{\n                character: 1_000,\n              }}\n              onChange={({ character: { value } }) => {\n                changeTextOptionByProduct({\n                  textOptionKey,\n                  value,\n                });\n              }}\n            />\n          ))}\n        </>\n      }\n    />\n  );\n};\n\nexport default OptionQuantity;\n","import {\n  SelectBox,\n  VisibleComponent,\n  useProductOptionActionContext,\n  useProductOptionStateContext,\n} from '@shopby/react-components';\n\nconst OptionSelector = () => {\n  const { selectorOptions, originOption } = useProductOptionStateContext();\n  const { selectOptionBy } = useProductOptionActionContext();\n\n  return (\n    <>\n      {selectorOptions.map(({ depthKey, option }) => (\n        <VisibleComponent\n          key={depthKey}\n          shows={originOption?.type !== 'DEFAULT'}\n          TruthyComponent={\n            <SelectBox\n              value={option.selectedOptionDepthKey}\n              hasEmptyOption={true}\n              emptyOptionLabel={option.emptyOptionLabel}\n              options={option.options?.map((option) => ({\n                disabled: option.disabled,\n                label: option.displayLabel,\n                value: option.optionDepthKey,\n              }))}\n              onSelect={({ currentTarget }) => {\n                selectOptionBy({\n                  depthKey,\n                  optionDepthKey: currentTarget.value,\n                });\n              }}\n            />\n          }\n        />\n      ))}\n    </>\n  );\n};\n\nexport default OptionSelector;\n","import { useState, useMemo, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { bool } from 'prop-types';\n\nimport {\n  MakeOrderBtn,\n  AddToCartBtn,\n  LikeBtn,\n  useModalActionContext,\n  VisibleComponent,\n  Button,\n  useProductOptionStateContext,\n  useProductDetailStateContext,\n  IconBtn,\n  useProductDetailActionContext,\n  useAuthActionContext,\n  IconSVG,\n  useNaverPayActionContext,\n  useProductOptionActionContext,\n} from '@shopby/react-components';\nimport { convertToKoreanCurrency } from '@shopby/shared';\n\nimport { useErrorBoundaryActionContext } from '../../../components/ErrorBoundary';\n\nimport OptionQuantity from './OptionQuantity';\nimport OptionSelector from './OptionSelector';\n\nconst UNPURCHASABLE_STATUS = ['READY', 'FINISHED', 'STOP', 'PROHIBITION'];\n\nconst Purchase = () => {\n  const [searchParams] = useSearchParams();\n  const productNo = Number(searchParams.get('productNo'));\n  const {\n    productDetail: { isSoldOut, likeStatus },\n    originProductDetail,\n  } = useProductDetailStateContext();\n  const { showNaverPayButton, prepareNaverPay, checkUsesNaverPayOrder } = useNaverPayActionContext();\n  const { fetchOptionToMakeOrder } = useProductOptionActionContext();\n  const { updateLikeStatus } = useProductDetailActionContext();\n  const { openConfirm } = useModalActionContext();\n  const { totalPrice } = useProductOptionStateContext();\n  const { isSignedIn } = useAuthActionContext();\n  const [visible, setVisible] = useState(false);\n  const { catchError } = useErrorBoundaryActionContext();\n\n  const unpurchasable = useMemo(\n    () => UNPURCHASABLE_STATUS.includes(originProductDetail?.status.saleStatusType) || isSoldOut,\n    [originProductDetail?.status]\n  );\n\n  const handleMakeOrderBtnClick = (data) => {\n    if (isSignedIn()) {\n      location.href = `/order/${data.orderSheetNo}`;\n\n      return;\n    }\n    location.href = `/sign-in?orderSheetNo=${data.orderSheetNo}`;\n  };\n\n  const handleCartBtnClick = () => {\n    openConfirm({\n      message: '장바구니에 담았습니다.',\n      confirmLabel: '장바구니 가기',\n      onConfirm: () => {\n        location.href = '/cart';\n      },\n      cancelLabel: '쇼핑계속하기',\n    });\n  };\n\n  useEffect(() => {\n    (async () => {\n      const usesNaverPayOrder = await checkUsesNaverPayOrder();\n\n      if (usesNaverPayOrder) {\n        showNaverPayButton({\n          containerElementId: 'naver-pay',\n          usesWishListButton: true,\n          redirectUrlAfterBuying: `${location.origin}/orders/confirm`,\n          redirectUrlAfterWishing: location.origin,\n          onBeforeBuyButtonClick: async () => {\n            const {\n              data: { products },\n            } = await fetchOptionToMakeOrder();\n\n            const naverPayItems = products.map(({ orderCnt, channelType, optionInputs, optionNo, productNo }) => ({\n              orderCnt,\n              channelType,\n              optionInputs,\n              optionNo,\n              productNo,\n            }));\n\n            prepareNaverPay({ items: naverPayItems });\n          },\n          onBeforeWishListButtonClick: async () => {\n            const {\n              data: { products },\n            } = await fetchOptionToMakeOrder();\n            prepareNaverPay({ productNo: products[0].productNo });\n          },\n        });\n      }\n    })();\n  }, []);\n\n  return (\n    <div className=\"purchase product-detail\">\n      <VisibleComponent\n        shows={!unpurchasable}\n        TruthyComponent={\n          <IconBtn\n            className={`purchase__opener ${visible ? 'is-show' : ''}`}\n            iconType=\"angle-down\"\n            label={`구매 하기 옵션 ${visible ? '닫기' : '열기'}`}\n            onClick={() => setVisible((prevVisible) => !prevVisible)}\n          />\n        }\n      />\n\n      <VisibleComponent\n        shows={unpurchasable}\n        TruthyComponent={\n          <Button\n            className=\"purchase__buy-btn purchase__buy-btn--unpurchasable\"\n            disabled={isSoldOut}\n            theme=\"dark\"\n            label=\"구매불가\"\n          />\n        }\n      />\n\n      <VisibleComponent\n        shows={!isSoldOut && !visible && !unpurchasable}\n        TruthyComponent={\n          <div className=\"purchase__button-wrap\">\n            <LikeBtn\n              className=\"purchase__like-btn\"\n              productNo={productNo}\n              isActive={likeStatus.isLiked}\n              count={likeStatus.count}\n              onClick={({ count, isActive }) =>\n                updateLikeStatus({\n                  count,\n                  isLiked: isActive,\n                })\n              }\n            >\n              <IconSVG\n                fill={likeStatus.isLiked ? 'var(--point-color)' : 'var(--default-color)'}\n                strokeWidth={0}\n                size={40}\n                name=\"fill-heart\"\n              />\n            </LikeBtn>\n            <Button className=\"purchase__buy-btn\" theme=\"caution\" label=\"구매하기\" onClick={() => setVisible(true)} />\n          </div>\n        }\n      />\n\n      <div className=\"purchase__option\" hidden={!visible}>\n        <OptionSelector />\n        <div className=\"purchase__quantity-box\">\n          <OptionQuantity />\n        </div>\n        <p className=\"purchase__total\">\n          <span>총 상품 금액</span>\n          <em>\n            <span className=\"highlight bold\">{convertToKoreanCurrency(totalPrice)}</span>원\n          </em>\n        </p>\n        <div className=\"purchase__btns\">\n          <AddToCartBtn onClick={handleCartBtnClick} onError={(e) => catchError(e)} />\n          <MakeOrderBtn onClick={handleMakeOrderBtnClick} onError={(e) => catchError(e)} />\n        </div>\n        <div id=\"naver-pay\" className=\"purchase__naver-pay-btn\" />\n      </div>\n    </div>\n  );\n};\n\nexport default Purchase;\n\nPurchase.propTypes = {\n  isSoldOut: bool,\n};\n","import { forwardRef } from 'react';\n\nimport { string, bool } from 'prop-types';\n\nimport { CharacterCounter } from '@shopby/react-components';\n\nconst TextOption = forwardRef(({ id, value, inputLabel, required, ...props }, ref) => (\n  <div className=\"text-option\">\n    <span className=\"text-option__label\">\n      <span>{inputLabel}</span>\n      {required && <em>(필수)</em>}\n    </span>\n    <CharacterCounter ref={ref} id={id} required={required} className=\"text-option__input\" value={value} {...props} />\n  </div>\n));\n\nexport default TextOption;\nTextOption.displayName = 'TextOption';\n\nTextOption.propTypes = {\n  id: string,\n  value: string,\n  inputLabel: string,\n  required: bool,\n};\n","import Purchase from './Purchase';\n\nexport default Purchase;\n","import { Slider, Slide, ThumbItem, useProductDetailStateContext, VisibleComponent } from '@shopby/react-components';\nimport { convertToKoreanCurrency } from '@shopby/shared';\n\nconst RelatedProduct = () => {\n  const { relatedProducts } = useProductDetailStateContext();\n\n  return (\n    <VisibleComponent\n      shows={relatedProducts.length > 0}\n      TruthyComponent={\n        <section className=\"l-panel related-product\">\n          <p className=\"related-product__title\">관련상품</p>\n          <div className=\"related-product__items\">\n            <Slider className=\"related-product__slider\" slidesPerView=\"auto\">\n              {relatedProducts.map(\n                ({ productNo, productName, discountedPrice, originalPrice, hasOnlyOriginalPrice, ...rest }) => (\n                  <Slide key={productNo} className=\"related-product__item\">\n                    <ThumbItem {...rest} href={`/product-detail?productNo=${productNo}`}>\n                      <span className=\"related-product__product-name\">{productName}</span>\n                      <span className=\"related-product__price\">\n                        <strong>{convertToKoreanCurrency(discountedPrice)}원</strong>\n                        <VisibleComponent\n                          shows={!hasOnlyOriginalPrice}\n                          TruthyComponent={<span>{convertToKoreanCurrency(originalPrice)}원</span>}\n                        />\n                      </span>\n                    </ThumbItem>\n                  </Slide>\n                )\n              )}\n            </Slider>\n          </div>\n        </section>\n      }\n    />\n  );\n};\n\nexport default RelatedProduct;\n","import { useMemo } from 'react';\n\nimport { number, bool } from 'prop-types';\n\nimport { useMallStateContext, VisibleComponent } from '@shopby/react-components';\nimport { convertToKoreanCurrency, isSignedIn } from '@shopby/shared';\n\nconst AccumulationInformation = ({ accumulatedAmount, canAccumulate }) => {\n  const { accumulationConfig } = useMallStateContext();\n  const signUpAccumulationLabel = useMemo(() => {\n    if (!accumulationConfig.useMemberAccumulation) return '';\n\n    if (isSignedIn()) return '';\n\n    return '(로그인 시 적립 가능)';\n  }, [accumulationConfig.useMemberAccumulation, isSignedIn]);\n\n  return (\n    <VisibleComponent\n      shows={canAccumulate && accumulatedAmount > 0}\n      TruthyComponent={\n        <dl className=\"product-summary__point\">\n          <dt>\n            <span className=\"ico ico--p-circle\"></span>\n            {accumulationConfig.accumulationName}\n          </dt>\n          <dd>\n            {convertToKoreanCurrency(accumulatedAmount)}\n            {` `}\n            {accumulationConfig.unit ?? 'p'}적립 {signUpAccumulationLabel}\n          </dd>\n        </dl>\n      }\n    />\n  );\n};\n\nAccumulationInformation.propTypes = {\n  accumulatedAmount: number,\n  canAccumulate: bool,\n};\n\nexport default AccumulationInformation;\n","import { useCallback, useState, useMemo } from \"react\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\n\nimport { debounce } from \"lodash-es\";\n\nimport {\n  Button,\n  VisibleComponent,\n  useCouponByProductActionContext,\n  useCouponByProductStateContext,\n  useModalActionContext,\n  useProductDetailStateContext,\n} from \"@shopby/react-components\";\nimport { CLIENT_ERROR, isSignedIn, CLIENT_ERROR_MESSAGE } from \"@shopby/shared\";\n\nimport CouponList from \"../../../components/CouponList\";\nimport { useErrorBoundaryActionContext } from \"../../../components/ErrorBoundary\";\nimport FullModal from \"../../../components/FullModal\";\nimport { COUPON_DOWNLOAD_BUTTON_DEBOUNCE_TIME } from \"../../../constants/debounceTime\";\n\nconst COUPON_DISPLAY_STATUS = {\n  ISSUABLE: {\n    theme: \"caution\",\n    disabled: false,\n  },\n  UN_ISSUABLE: {\n    theme: \"dark\",\n    disabled: true,\n  },\n};\n\nconst DownloadCouponButton = () => {\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const productNo = Number(searchParams.get(\"productNo\"));\n\n  const [visibleCouponModal, setVisibleCouponModal] = useState(false);\n  const [shouldPreventDoubleDownload, setShouldPreventDoubleDownload] =\n    useState(false);\n  const [allIssued, setAllIssued] = useState(false);\n\n  const {\n    productDetail: { baseInfo },\n  } = useProductDetailStateContext();\n  const { coupons, issuedCouponNos } = useCouponByProductStateContext();\n  const { openAlert } = useModalActionContext();\n  const { fetchIssuableCouponsByProductNo, downloadCouponsByProductNo } =\n    useCouponByProductActionContext();\n  const { catchError } = useErrorBoundaryActionContext();\n\n  const downloadAllButtonInformation = useMemo(() => {\n    const hasCoupons = coupons?.length > 0;\n\n    if (coupons?.every((coupon) => !coupon.downloadable))\n      return COUPON_DISPLAY_STATUS.UN_ISSUABLE;\n\n    return hasCoupons\n      ? COUPON_DISPLAY_STATUS.ISSUABLE\n      : COUPON_DISPLAY_STATUS.UN_ISSUABLE;\n  }, [coupons]);\n\n  const handleCouponModalClick = async () => {\n    try {\n      if (isSignedIn()) {\n        await fetchIssuableCouponsByProductNo({\n          includesCartCoupon: true,\n        });\n\n        setVisibleCouponModal((prev) => !prev);\n      } else {\n        openAlert({\n          message: CLIENT_ERROR_MESSAGE[CLIENT_ERROR.NO_AUTHORIZATION],\n          onClose: () => {\n            navigate(\"/sign-in\", {\n              replace: true,\n              state: {\n                from: `${location.pathname}${location.search}`,\n              },\n            });\n          },\n        });\n      }\n    } catch (e) {\n      catchError(e);\n    }\n  };\n\n  const fetchCoupons = () => {\n    setShouldPreventDoubleDownload(false);\n\n    fetchIssuableCouponsByProductNo({\n      includesCartCoupon: true,\n    });\n  };\n\n  const handleDownloadCouponsBtnClick = debounce(\n    useCallback(async () => {\n      if (shouldPreventDoubleDownload) return;\n\n      setShouldPreventDoubleDownload(true);\n\n      try {\n        const {\n          data: { issuedCoupons },\n        } = await downloadCouponsByProductNo({\n          productNo,\n          includesCartCoupon: true,\n        });\n\n        const issued = issuedCoupons.length > 0;\n\n        if (!issued) {\n          openAlert({\n            message: \"발급 가능한 쿠폰이 없습니다.\",\n          });\n        }\n\n        setAllIssued(issued);\n        fetchCoupons();\n      } catch (e) {\n        const message = e?.error?.serverError?.message;\n\n        if (message) {\n          await openAlert({\n            message,\n          });\n        }\n\n        fetchCoupons();\n      }\n    }, [productNo]),\n    COUPON_DOWNLOAD_BUTTON_DEBOUNCE_TIME\n  );\n\n  const closeCouponModal = () => {\n    fetchCoupons();\n    setVisibleCouponModal(false);\n    setAllIssued(false);\n  };\n\n  return (\n    <VisibleComponent\n      shows={baseInfo?.couponUseYn === \"N\"}\n      TruthyComponent={\n        <p className=\"product-summary__coupon-unissuable\">쿠폰사용 불가</p>\n      }\n      FalsyComponent={\n        <>\n          <button\n            type=\"button\"\n            className=\"product-summary__coupon-download-btn\"\n            onClick={handleCouponModalClick}\n          >\n            쿠폰 받기\n            <span className=\"ico ico--download-white\"></span>\n          </button>\n          <VisibleComponent\n            shows={visibleCouponModal}\n            TruthyComponent={\n              <FullModal title=\"쿠폰 받기\" onClose={closeCouponModal}>\n                <CouponList allIssued={allIssued} />\n                <Button\n                  className={`coupons__download-btn ${\n                    downloadAllButtonInformation.disabled && \"disabled\"\n                  }`}\n                  label=\"쿠폰 한번에 받기\"\n                  {...downloadAllButtonInformation}\n                  onClick={() =>\n                    handleDownloadCouponsBtnClick(coupons, issuedCouponNos)\n                  }\n                />\n              </FullModal>\n            }\n          />\n        </>\n      }\n    />\n  );\n};\nexport default DownloadCouponButton;\n","import { useMemo } from 'react';\n\nimport { string, bool, number, shape, arrayOf, oneOf } from 'prop-types';\n\nimport { VisibleComponent } from '@shopby/react-components';\nimport { convertToKoreanCurrency } from '@shopby/shared/utils';\n\nconst getConditionLabel = (freight, conditionType) => {\n  if (conditionType === 'QUANTITY_PROPOSITIONAL_FEE') return `(${freight.perOrderCnt}개마다 부과)`;\n\n  if (freight.aboveDeliveryAmt > 0) return `(${convertToKoreanCurrency(freight.aboveDeliveryAmt)}원 이상 구매 시 무료)`;\n\n  return '';\n};\n\nconst getFeeLabel = (freight, conditionType) => {\n  if (conditionType === 'FREE') return '무료배송';\n\n  const feeLabel = `${convertToKoreanCurrency(freight.fee)}원`;\n\n  return conditionType === 'FIXED_FEE' ? `배송비 ${feeLabel}` : feeLabel;\n};\n\nconst FreightInformation = ({ areaType, partnerCompanyName, canFreight, conditionType, ...freight }) => {\n  const feeLabel = useMemo(() => getFeeLabel(freight, conditionType), [conditionType]);\n\n  const conditionLabel = useMemo(() => getConditionLabel(freight, conditionType), [conditionType]);\n\n  return (\n    <dl className=\"product-summary__freight\">\n      <dt>\n        <span className=\"ico ico--shipping-car\"></span>\n        <VisibleComponent\n          shows={areaType === 'PARTNER_SHIPPING_AREA'}\n          TruthyComponent={\n            <>\n              <strong>{partnerCompanyName}</strong> 배송\n            </>\n          }\n        />\n      </dt>\n      <dd className={`product-summary__display-label${canFreight ? '' : ' product-summary__display-label--unable'}`}>\n        <span className=\"a11y\">배송비</span>\n        {feeLabel}\n        <VisibleComponent shows={!!conditionLabel} TruthyComponent={<em>{conditionLabel}</em>} />\n      </dd>\n    </dl>\n  );\n};\n\nFreightInformation.propTypes = {\n  type: oneOf([string, 'PARCEL_DELIVERY', 'DIRECT_DELIVERY', 'NONE']),\n  areaType: oneOf(['PARTNER_SHIPPING_AREA', 'MALL_SHIPPING_AREA']),\n  partnerCompanyName: string,\n  canFreight: bool,\n  canInternationalFreight: bool,\n  fee: number,\n  isPrePayment: bool,\n  conditionType: oneOf(['FREE', 'CONDITIONAL', 'FIXED_FEE', 'QUANTITY_PROPOSITIONAL_FEE', 'PRICE_FEE', 'QUANTITY_FEE']),\n  aboveDeliveryAmt: number,\n  conditionLabel: string,\n  companyType: string,\n  companyTypeLabel: string,\n  defaultConditionLabel: string,\n  remoteDeliveryAreaFee: shape({\n    address: string,\n    extraDeliveryAmt: number,\n  }),\n  feeLabels: arrayOf(string),\n  conditionDetails: arrayOf(string),\n  perOrderCnt: number,\n  customerGuidance: string,\n  returnFee: number,\n  returnWarehouse: shape({\n    warehouseAddressType: oneOf(['ADDRESS', 'SUBSTITUTION']),\n    partnerNo: number,\n    addressStr: string,\n    address: string,\n    countryCd: string,\n    isDefaultReleaseWarehouse: bool,\n    isDefaultReturnWarehouse: bool,\n    detailAddress: string,\n    zipCd: string,\n    warehouseName: string,\n    warehouseNo: number,\n  }),\n};\n\nexport default FreightInformation;\n","import { useState, useMemo } from 'react';\n\nimport { sumBy } from 'lodash-es';\nimport { number } from 'prop-types';\n\nimport { VisibleComponent, useProductDetailStateContext } from '@shopby/react-components';\nimport { convertToKoreanCurrency } from '@shopby/shared';\n\nimport TitleModal from '../../../components/TitleModal';\n\nconst DISCOUNT_LABEL_MAP = {\n  additionDiscountAmt: '추가할인',\n  immediateDiscountAmt: '즉시할인',\n};\n\nconst DiscountPriceInformation = () => {\n  const {\n    originProductDetail: { price },\n  } = useProductDetailStateContext();\n\n  const discountPriceStatus = useMemo(\n    () =>\n      Object.entries(DISCOUNT_LABEL_MAP)\n        .map(([key, label]) => ({\n          key,\n          label,\n          discountAmt: price[key],\n        }))\n        .filter(({ discountAmt }) => discountAmt > 0),\n    [price]\n  );\n\n  const totalDiscountPrice = useMemo(() => sumBy(discountPriceStatus, 'discountAmt'), [discountPriceStatus]);\n\n  return (\n    <div className=\"discount-price-information\">\n      <ul className=\"discount-price-information__detail\">\n        {discountPriceStatus.map(({ key, label, discountAmt }) => (\n          <li key={key}>\n            <p>{label}</p>\n            <p>- {convertToKoreanCurrency(discountAmt)} 원</p>\n          </li>\n        ))}\n      </ul>\n      <div className=\"discount-price-information__total\">\n        <p>총 할인금액</p>\n        <p>- {convertToKoreanCurrency(totalDiscountPrice)}원</p>\n      </div>\n      <ul className=\"discount-price-information__description\">\n        <li>※ 상품 옵션에 따라 할인혜택이 상이할 수 있습니다.</li>\n        <li>※ 비회원 구매 시 할인적용이 불가능할 수 있습니다.</li>\n      </ul>\n    </div>\n  );\n};\n\nDiscountPriceInformation.propTypes = {\n  price: number,\n};\n\nconst PriceInformation = ({ discountRate, discountedPrice, originalPrice }) => {\n  const [visibleDiscountPriceModal, setVisibleDiscountPriceModal] = useState(false);\n\n  return (\n    <>\n      <div className=\"product-summary__price-detail\">\n        <VisibleComponent\n          shows={discountRate > 0}\n          TruthyComponent={\n            <p className=\"product-summary__off-percent\">\n              {discountRate}\n              <span>%</span>\n            </p>\n          }\n        />\n        <div className=\"product-summary__discounted-price\">\n          <p className=\"product-summary__price\">\n            {convertToKoreanCurrency(discountedPrice)}\n            <span>원</span>\n          </p>\n          <VisibleComponent\n            shows={discountRate > 0}\n            TruthyComponent={\n              <del className=\"product-summary__original-price\">\n                {convertToKoreanCurrency(originalPrice)}\n                <button className=\"help-btn\" onClick={() => setVisibleDiscountPriceModal((prev) => !prev)}>\n                  <span className=\"a11y\">할인 내역 툴팁 보기</span>\n                </button>\n              </del>\n            }\n          />\n        </div>\n      </div>\n      <VisibleComponent\n        shows={visibleDiscountPriceModal}\n        TruthyComponent={\n          <TitleModal\n            title=\"할인내역\"\n            classModifier=\"discount-price-information\"\n            onClose={() => setVisibleDiscountPriceModal(false)}\n          >\n            <DiscountPriceInformation />\n          </TitleModal>\n        }\n      />\n    </>\n  );\n};\nPriceInformation.propTypes = {\n  discountRate: number,\n  discountedPrice: number,\n  originalPrice: number,\n};\nexport default PriceInformation;\n","import { useProductDetailStateContext } from '@shopby/react-components';\n\nimport AccumulationInformation from './AccumulationInformation';\nimport DownloadCouponButton from './DownloadCouponButton';\nimport FreightInformation from './FreightInformation';\nimport PriceInformation from './PriceInformation';\n\nconst Summary = () => {\n  const {\n    productDetail: { summary },\n  } = useProductDetailStateContext();\n\n  return (\n    <div className=\"product-summary\">\n      <p className=\"product-summary__brand-name\">{summary.brandName}</p>\n      <h2 className=\"product-summary__title\">{summary.productName}</h2>\n      <div className=\"product-summary__price-info\">\n        <PriceInformation {...summary} />\n        <DownloadCouponButton />\n      </div>\n      <div className=\"product-summary__freight-line\">\n        <FreightInformation {...summary.freight} />\n        <AccumulationInformation {...summary.accumulation} />\n      </div>\n    </div>\n  );\n};\nexport default Summary;\n","import Summary from './Summary';\n\nexport default Summary;\n","import ProductDetail from './ProductDetail';\n\nexport default ProductDetail;\n"],"names":[],"sourceRoot":""}