{"version":3,"file":"src_pages_ProductDetail_Content_Detail_jsx.16fde3dc3a3a9db96eaf.bundle.js","mappings":";;;;;;;;;;;;AAAA;AACA;;;;;;;;;;;;;;;;;;ACDA;AAEA;AAEA;AAEA;AAAA;AAAA;AAAA;AACA;AAGA;AAGA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAEA;AAAA;AAEA;AAGA;AACA;AAAA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnDA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAKA;AAJA;AACA;AAAA;AACA;AAGA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAPA;AAAA;AASA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AATA;AAAA;AAWA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAJA;AAAA;AAQA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAIA;AAEA;AACA;AAAA;AAAA;AAAA;AAGA;AAGA;AACA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AAAA;AAIA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAOA;AAEA;;;;;;;;;;;;;;;;;;AC9HA;AAEA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAKA;AACA;AAGA;AAAA;AAGA;AAAA;AAIA;AAGA;AAEA;AAGA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;AC5DA;AAEA;AAEA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAGA;AACA;AAEA;AAAA;AAEA;AAAA;AAIA;AAEA;AAAA;AAEA;AAAA;AAIA;AAEA;AAEA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA","sources":["webpack://@shopby/react-skin/./src/constants/certification.js","webpack://@shopby/react-skin/./src/pages/ProductDetail/Content/CertificationInformation.jsx","webpack://@shopby/react-skin/./src/pages/ProductDetail/Content/Detail.jsx","webpack://@shopby/react-skin/./src/pages/ProductDetail/Content/DutyInformation.jsx","webpack://@shopby/react-skin/./src/pages/ProductDetail/Content/KcCertificationInformation.jsx"],"sourcesContent":["// KC 인중 유형이 방송통신기자재 잠정인증 / 적합등록 / 적합인증(Kc 인증구분 kcCd04 / kcCd05 / kcCd06)일 경우\nexport const SPECIAL_KC = [\n  'kcCd04',\n  'kcCd05',\n  'kcCd06',\n  '방송통신기자재 잠정인증',\n  '방송통신기자재 적합등록',\n  '방송통신기자재 적합인증',\n];\n","import { bool, shape, string, arrayOf, number } from 'prop-types';\n\nimport { VisibleComponent } from '@shopby/react-components';\n\nimport KcCertification from './KcCertificationInformation';\n\nconst CertificationInformation = ({ includesKcInDutyInfo, showsOnPageDetail, certificationInformation }) => {\n  const showsCertificationInformationTitle =\n    showsOnPageDetail || (!includesKcInDutyInfo && certificationInformation?.certificationType !== 'NOT_TARGET');\n\n  const showsCertificationInformationContent =\n    !includesKcInDutyInfo && certificationInformation?.certificationType === 'TARGET';\n\n  return (\n    <>\n      <VisibleComponent\n        shows={showsCertificationInformationTitle}\n        TruthyComponent={<p className=\"product-content__title\">인증 정보</p>}\n      />\n      <VisibleComponent\n        shows={showsCertificationInformationContent}\n        TruthyComponent={\n          <>\n            <KcCertification certifications={certificationInformation?.certifications} />\n          </>\n        }\n      />\n      <VisibleComponent\n        shows={certificationInformation?.certificationType === 'DETAIL_PAGE'}\n        TruthyComponent={<p>상품 상세페이지 내 별도 표기</p>}\n      />\n    </>\n  );\n};\n\nCertificationInformation.propTypes = {\n  includesKcInDutyInfo: bool,\n  showsOnPageDetail: bool,\n  certificationInformation: shape({\n    certificationType: string,\n    certifications: arrayOf(\n      shape({\n        no: number,\n        type: string,\n        code: string,\n        date: string,\n      })\n    ),\n  }),\n};\n\nexport default CertificationInformation;\n","import { useState, useMemo, useRef } from 'react';\n\nimport { useProductDetailStateContext, useProductOptionStateContext, VisibleComponent } from '@shopby/react-components';\n\nimport Sanitized from '../../../components/Sanitized';\nimport Review from '../Review';\n\nimport CertificationInformation from './CertificationInformation';\nimport DutyInformation from './DutyInformation';\n\nconst LIMIT_HEIGHT_TO_SHOW_PRODUCT_DETAIL = 500;\n\nconst Detail = () => {\n  const productDetailRef = useRef();\n\n  const [isOpen, setIsOpen] = useState(false);\n  const [showsMoreBtn, setShowsMoreBtn] = useState(false);\n\n  const {\n    productDetail: {\n      content: { dutyInfo, ...restContent },\n      baseInfo,\n    },\n  } = useProductDetailStateContext();\n  const { originOption } = useProductOptionStateContext();\n\n  const { contents, hasContent } = useMemo(() => {\n    const _contents = Object.values(restContent);\n\n    return {\n      hasContent: _contents.some(Boolean),\n      contents: _contents,\n    };\n  }, [restContent]);\n\n  const { showsOptionImages, optionImages } = useMemo(() => {\n    // 상품 상세 > 등록된 옵션 이미지 사용\n    const _showsOptionImages = baseInfo?.optionImageViewable;\n    const _optionImages = (originOption?.flatOptions ?? [])?.flatMap(({ images }) => images.filter(({ main }) => main));\n\n    return {\n      showsOptionImages: _showsOptionImages,\n      optionImages: _optionImages,\n    };\n  }, [baseInfo?.optionImageViewable, originOption?.flatOptions]);\n\n  const { hasDutyInfo, includesKcInDutyInfo } = useMemo(\n    () => ({\n      hasDutyInfo: dutyInfo.contents.length > 0,\n      includesKcInDutyInfo: dutyInfo.contents?.some(({ label }) => label.startsWith('KC')),\n    }),\n    [dutyInfo]\n  );\n\n  requestAnimationFrame(() => {\n    const offsetHeight = productDetailRef?.current?.offsetHeight;\n    setShowsMoreBtn(offsetHeight >= LIMIT_HEIGHT_TO_SHOW_PRODUCT_DETAIL);\n  });\n\n  return (\n    <>\n      <div ref={productDetailRef} className={`editor product-content__content ${isOpen ? '' : 'hidden'}`}>\n        <div className=\"product-content__content-box\">\n          <VisibleComponent\n            shows={hasContent || showsOptionImages}\n            TruthyComponent={<p className=\"product-content__title\">상품상세정보</p>}\n          />\n          <VisibleComponent\n            shows={showsOptionImages}\n            TruthyComponent={\n              <div>\n                {optionImages?.map((image, index) => (\n                  <div key={`option-main-image-${index}`}>\n                    <img src={image.url} />\n                  </div>\n                ))}\n              </div>\n            }\n            FalsyComponent={\n              <div>\n                {contents.map((html, index) => (\n                  <Sanitized key={`product-detail-content-${index}`} html={html ?? ''} />\n                ))}\n              </div>\n            }\n          />\n          <VisibleComponent\n            shows={!hasContent && !showsOptionImages}\n            TruthyComponent={<p className=\"product-content__empty-content\">등록된 상품 상세 정보가 없습니다.</p>}\n          />\n\n          {/* 상품정보제공고시 */}\n          <DutyInformation\n            hasDutyInfo={hasDutyInfo}\n            includesKcInDutyInfo={includesKcInDutyInfo}\n            contents={dutyInfo.contents}\n            certifications={baseInfo?.certifications}\n          />\n\n          {/* 인증정보 */}\n          <CertificationInformation\n            includesKcInDutyInfo={includesKcInDutyInfo}\n            showsOnPageDetail={baseInfo?.certificationType === 'DETAIL_PAGE'}\n            certificationInformation={{\n              certificationType: baseInfo?.certificationType,\n              certifications: baseInfo?.certifications,\n            }}\n          />\n\n          <VisibleComponent\n            shows={showsMoreBtn}\n            TruthyComponent={\n              <div className=\"product-content__more-btn\">\n                <button onClick={() => setIsOpen((prev) => !prev)}>\n                  {isOpen ? '상세정보 접기' : '상세정보 펼쳐보기'}\n                </button>\n              </div>\n            }\n          />\n        </div>\n      </div>\n      <Review />\n    </>\n  );\n};\n\nexport default Detail;\n","import { bool, arrayOf, shape, string, number } from 'prop-types';\n\nimport { VisibleComponent } from '@shopby/react-components';\n\nimport KcCertification from './KcCertificationInformation';\n\nconst DutyInformation = ({ hasDutyInfo, includesKcInDutyInfo, contents = [], certifications }) => (\n  <>\n    <VisibleComponent\n      shows={hasDutyInfo}\n      TruthyComponent={<p className=\"product-content__title\">상품정보제공고시</p>}\n    />\n    <VisibleComponent\n      shows={hasDutyInfo}\n      TruthyComponent={\n        <div className=\"product-content__certification product-content__certification--duty-info\">\n          {contents.map(({ label, description }, index) => (\n            <dl key={index}>\n              <dt>{label}</dt>\n              <dd>\n                {\n                  <VisibleComponent\n                    shows={includesKcInDutyInfo && label.startsWith('KC')}\n                    TruthyComponent={\n                      <>\n                        {description}\n                        <KcCertification certifications={certifications} />\n                      </>\n                    }\n                    FalsyComponent={description}\n                  />\n                }\n              </dd>\n            </dl>\n          ))}\n        </div>\n      }\n    />\n  </>\n);\n\nexport default DutyInformation;\n\nDutyInformation.propTypes = {\n  hasDutyInfo: bool,\n  includesKcInDutyInfo: bool,\n  contents: arrayOf(\n    shape({\n      label: string,\n      description: string,\n    })\n  ),\n  certifications: arrayOf(\n    shape({\n      no: number,\n      type: string,\n      code: string,\n      date: string,\n    })\n  ),\n};\n","import { arrayOf, shape, string, number } from 'prop-types';\n\nimport { VisibleComponent } from '@shopby/react-components';\n\nimport { SPECIAL_KC } from '../../../constants/certification';\n\nconst KcCertification = ({ certifications = [] }) => (\n  <>\n    {certifications.map((certification, index) => (\n      <dl className=\"kc-info\" key={`${certification.no}-${index}`}>\n        <dt>{certification.type} 안전확인 대상 품목으로 아래의 국가 통합인증 필함</dt>\n        <VisibleComponent\n          shows={SPECIAL_KC.includes(certification.code) || SPECIAL_KC.includes(certification.type)}\n          TruthyComponent={\n            <dd>\n              <span className=\"kc-logo\" />\n              <span>\n                인증 날짜: <a href=\"https://rra.go.kr/ko/license/A_c_search.do\">{certification.date}</a>\n              </span>\n            </dd>\n          }\n          FalsyComponent={\n            <dd>\n              <span className=\"kc-logo\" />\n              인증 번호:{' '}\n              <a href={`https://www.safetykorea.kr/search/searchPop?certNum=${certification.code}`}>\n                {certification.code}\n              </a>\n            </dd>\n          }\n        />\n      </dl>\n    ))}\n  </>\n);\n\nKcCertification.propTypes = {\n  certifications: arrayOf(\n    shape({\n      no: number,\n      type: string,\n      code: string,\n      date: string,\n    })\n  ),\n};\n\nexport default KcCertification;\n"],"names":[],"sourceRoot":""}