{"version":3,"file":"default-src_components_IdentificationVerificationBtn_IdentificationVerificationBtn_jsx.4c31b5c2caf1eb67d3d3.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAEA;AAEA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAGA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAdA;AAAA;AAAA;AAgBA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://@shopby/react-skin/./src/components/IdentificationVerificationBtn/IdentificationVerificationBtn.jsx"],"sourcesContent":["import { useState, useEffect, useMemo } from 'react';\n\nimport { string, func } from 'prop-types';\n\nimport {\n  Button,\n  CustomModal,\n  useIdentificationVerificationActionContext,\n  useIdentificationVerificationStateContext,\n  IconBtn,\n  useAgeVerificationActionContext,\n} from '@shopby/react-components';\n\nconst IdentificationVerificationButton = ({ className, label, type, onSubmit, onSetNewPhoneNumber = () => {} }) => {\n  const { getIdVerificationResponse, verifyCi, updateIsCiExist, updateIsIdentificationVerificationReSend, updateCi } =\n    useIdentificationVerificationActionContext();\n  const { isIdentificationVerificationReSend } = useIdentificationVerificationStateContext();\n  const { postKcpAgeVerification } = useAgeVerificationActionContext();\n\n  const [isIdentificationVerificationModalOpen, setIsIdentificationVerificationModalOpen] = useState(false);\n  const [key, setKey] = useState(null);\n\n  const getKcpCallbackUrl = useMemo(() => `${location.origin}/callback`, [location]);\n\n  window.addEventListener('message', (event) => {\n    if (event.origin !== location.origin || typeof event.data !== 'string') {\n      return;\n    }\n\n    setKey(event.data);\n\n    setIsIdentificationVerificationModalOpen(false);\n  });\n\n  const verifyMemberExist = async () => {\n    const {\n      data: { ci, phone },\n    } = await getIdVerificationResponse({ key });\n\n    updateCi(ci);\n\n    const { data: verifyResult } = await verifyCi({ ci });\n\n    if (type === 'memberModify' && !verifyResult.exist) onSetNewPhoneNumber(phone);\n\n    if (verifyResult.exist) {\n      updateIsCiExist(true);\n    }\n  };\n\n  useEffect(() => {\n    if (['signUp', 'memberModify'].includes(type) && key) {\n      updateIsIdentificationVerificationReSend(true);\n      verifyMemberExist();\n    }\n\n    if (key && type === 'adultCertification') {\n      postKcpAgeVerification({ key }).then(({ data }) => {\n        requestAnimationFrame(() => {\n          onSubmit?.(data);\n        });\n      });\n    }\n  }, [key]);\n\n  return (\n    <>\n      <Button\n        className={className}\n        label={label}\n        onClick={() => {\n          if (isIdentificationVerificationReSend) {\n            updateIsIdentificationVerificationReSend(false);\n\n            return;\n          }\n          setIsIdentificationVerificationModalOpen(true);\n        }}\n      />\n      {isIdentificationVerificationModalOpen && (\n        <CustomModal className=\"identification-verification-modal\">\n          <>\n            <div className=\"identification-verification-modal__header\">\n              <h2 className=\"identification-verification-modal__title\">휴대폰 본인인증</h2>\n              <IconBtn\n                className=\"identification-verification-modal__close-btn\"\n                iconType=\"x-black\"\n                onClick={() => setIsIdentificationVerificationModalOpen(false)}\n              />\n            </div>\n            <div className=\"identification-verification-modal__content title-modal--full\">\n              <iframe src={getKcpCallbackUrl}></iframe>\n            </div>\n          </>\n        </CustomModal>\n      )}\n    </>\n  );\n};\n\nexport default IdentificationVerificationButton;\nIdentificationVerificationButton.propTypes = {\n  type: string.isRequired,\n  label: string,\n  className: string,\n  onSubmit: func,\n  onSetNewPhoneNumber: func,\n};\n"],"names":[],"sourceRoot":""}