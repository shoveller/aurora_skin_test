{"version":3,"file":"src_pages_ProductDetail_Content_ShippingClaim_jsx.a9481f871d0b9d45f900.bundle.js","mappings":";;;;;;;;;;;;;;;AAAA;AAEA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;ACxBA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAIA;AAIA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAIA;AACA;AAAA;AAGA;AAKA;AAEA","sources":["webpack://@shopby/react-skin/./src/components/Sanitized/Sanitized.jsx","webpack://@shopby/react-skin/./src/components/Sanitized/index.js","webpack://@shopby/react-skin/./src/pages/ProductDetail/Content/ShippingClaim.jsx"],"sourcesContent":["import { string, object } from 'prop-types';\n\nconst { sanitize } = require('dompurify');\n\nconst Sanitized = ({ html, style, className = '' }) => (\n  <div\n    className={`editor ${className}`}\n    dangerouslySetInnerHTML={{\n      __html: sanitize(html ?? '', {\n        USE_PROFILES: { html: true },\n        ADD_TAGS: ['iframe', 'a'],\n        ADD_ATTR: ['allow', 'allowfullscreen', 'frameborder', 'scrolling', 'target', 'rel', 'type'],\n      }),\n    }}\n    style={style}\n  />\n);\n\nSanitized.propTypes = {\n  className: string,\n  style: object,\n  html: string,\n};\n\nexport default Sanitized;\n","import Sanitized from './Sanitized';\n\nexport default Sanitized;\n","import { useMemo } from 'react';\n\nimport { VisibleComponent, useProductDetailStateContext } from '@shopby/react-components';\n\nimport Sanitized from '../../../components/Sanitized';\n\nconst TITLE_MAP = {\n  freight: '배송안내',\n  exchange: '교환 및 반품안내',\n  refund: '환불 안내',\n  afterService: 'AS 안내',\n};\n\nconst ShippingClaim = () => {\n  const {\n    productDetail: { guide },\n  } = useProductDetailStateContext();\n\n  const guideContents = useMemo(\n    () =>\n      Object.entries(guide)\n        .map(([titleKey, content]) => ({\n          titleKey,\n          content,\n        }))\n        .filter(({ content }) => Boolean(content)),\n    [guide]\n  );\n\n  return (\n    <>\n      {\n        <VisibleComponent\n          shows={guideContents.length > 0}\n          TruthyComponent={\n            <div className=\"product-content-shipping-claim\">\n              {guideContents.map(({ titleKey, content }) => (\n                <div key={`shipping-claim-${titleKey}`}>\n                  <p className=\"product-content__title\">{TITLE_MAP[titleKey]}</p>\n                  <Sanitized html={content} />\n                </div>\n              ))}\n            </div>\n          }\n          FalsyComponent={\n            <div className=\"empty-list\">\n              <p>등록된 배송/교환/반품/AS 정보가 없습니다.</p>\n            </div>\n          }\n        />\n      }\n    </>\n  );\n};\n\nexport default ShippingClaim;\n"],"names":[],"sourceRoot":""}